{"version":3,"sources":["reducers/popups.tsx","reducers/settings.tsx","reducers/histories.tsx","reducers/index.tsx","store/index.tsx","store/persist.ts","components/about/info/parseWKT.js","components/about/info/crs.tsx","components/about/api.ts","actions/popups.tsx","components/common/popup/popup.jsx","icons/back-icon.jsx","icons/close-icon.jsx","components/common/popup/interface/menu-bar/menu.jsx","hooks/useMobileOnly.tsx","actions/settings.tsx","components/about/popup/item/index.jsx","components/common/list/result/index.jsx","components/about/popup/views/List/index.jsx","components/about/popup/views/Costume/index.jsx","components/about/popup/index.jsx","components/about/info/intersection.tsx","components/about/index.tsx","icons/search-icon.jsx","components/settings/crs-selector/popup/api.ts","hooks/useSearchBar.tsx","components/settings/crs-selector/popup/views/search/search.jsx","hooks/useCRSelector.tsx","hooks/useCRS.tsx","components/settings/crs-selector/popup/views/search/item/item.jsx","components/settings/crs-selector/popup/views/search/result/result.jsx","components/settings/crs-selector/popup/views/search/view.jsx","components/common/globe/globe.jsx","components/settings/crs-selector/popup/views/globe/view.jsx","hooks/useCurrentSize.tsx","components/settings/crs-selector/popup/popup.jsx","components/settings/button/advanced.jsx","components/settings/button/direct.jsx","hooks/useOutsideClick.tsx","components/settings/crs-selector/crs-selector.jsx","hooks/useCRSCode.tsx","components/settings/parameters.js","components/settings/settings.jsx","components/settings/button/global.jsx","icons/arrow-icon.jsx","calculation/format.js","calculation/conversion.js","components/converter/block/fields.jsx","hooks/useCRSUnity.tsx","components/converter/block/input.jsx","components/converter/block/output.jsx","components/converter/block/index.tsx","components/converter/popup/index.jsx","components/converter/index.tsx","App.tsx","index.tsx"],"names":["defaultState","isChangingCRS","isChangingTransform","isReporting","qwery","result","PopupReducer","state","action","type","payload","_default","modifiedCRS","source","target","zAxe","DMS","transform","name","wkt","SettingsReducer","HistoryReducer","rootReducer","combineReducers","popups","settings","history","throttle","require","persistantState","serializedState","localStorage","getItem","JSON","parse","err","loadState","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","subscribe","stringify","setItem","saveState","getState","cleanText","value","toRemove","RegExp","space","replace","parseProjection","projection","match","parseParameters","re","list","Array","from","matchAll","item","res","map","separator","split","i","lineToObject","BaseInformation","data","className","code","unityOfMeasure","kind","bounds","westBoundLon","eastBoundLon","northBoundLat","southBoundLat","Elipsoid","ellipsoid","semiMajorAxis","invFlattening","CoordinateSystem","coordinateSystem","dimension","Datum","datum","AboutItem","useSelector","fetchTransformationList","a","fetch","process","catch","json","togglePopup","toggleTransformPopup","Popup","isOpen","children","ReactDOM","createPortal","document","getElementById","BackIcon","props","width","height","viewBox","style","d","CloseIcon","Interface","onClose","isMobile","useState","innerWidth","toggleMobile","handleScreen","useEffect","addEventListener","removeEventListener","useMobileOnly","onClick","setOrigin","setTransform","Item","transformation","onSelect","isSelected","dispatch","useDispatch","accuracy","area","Result","undefined","isArray","child","TransformationView","onImport","setList","then","reverse","CustomeTransformationView","sourceName","sourceWKT","setName","setWKT","onChange","e","placeholder","TransformationPopup","isImporting","toggleImported","CrsIntersection","About","SearchIcon","getRequest","app","key","parrams","quest","fetchTransfrom","point","proj","getCookie","cookieValue","cookie","cookies","length","trim","substring","decodeURIComponent","s_crs","t_crs","x","y","z","method","headers","body","useSearchBar","localState","handleLocalState","_","isEqual","fetchCRSList","setQwery","setResult","Search","qweryChange","handleResult","event","onKeyPress","useCRSelector","_origin","_global_origin","_local_origin","origin","self","oppositName","other","useCRS","fetchAboutCRS","memo","element","wraper","useRef","isAlreadySelected","toggleAlreadySelected","setCRS","ref","ResultCRS","findCRS","find","setFind","filter","elem","SearchView","svgRef","rotate","World","feature","world","objects","collection","current","graticule","d3","scale","translate","path","svg","g","append","attr","on","selectAll","features","enter","properties","call","k","dx","dy","scaleExtent","passive","remove","GlobeView","isRenderFinnished","container","sizeHandle","useLayoutEffect","handleResize","offsetWidth","offsetHeight","useCurrentSize","CrsPopup","AdvancedSelectBtn","parameters","DirectSelectBtn","updateOrigin","EPSG","changeEPSG","component","exception","isActive","setActive","handleClickOutside","contains","useOutsideClick","isChanging","toggleChange","evt","CrsSelector","crsCode","title","common","Settings","ConverterPropretiesBtn","checked","Arrow","convertToDMS","m","s","toString","test","parseInt","Number","toFixed","convertToDecimal","toLowerCase","extract","marker","sign","degree","minute","second","parseFloat","coordinate","Object","values","prop","response","Field","readOnly","autoComplete","Fields","unity","includes","useCRSUnity","Input","prev","Output","points","Root","PointConverter","onConvert","pointHandle","useCallback","FetchConvertion","apiPostReq","files","url","formData","FormData","forEach","id","keys","RepportPopup","message","setMessage","theme","setTheme","email","setEmail","selectedImage","setSelectedImage","onSubmit","preventDefault","subject","enctype","index","autoDestroy","src","URL","createObjectURL","display","multiple","for","Converter","stateLocal","handleChange","startRepporting","App","render","StrictMode"],"mappings":"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","file":"static/js/main.0f30fa26.chunk.js","sourcesContent":["\r\ntype State = {\r\n    isChangingCRS: boolean,\r\n    isChangingTransform: boolean,\r\n    isReporting: boolean,\r\n    qwery: String,\r\n    result: Array<any>,\r\n};\r\n\r\nconst defaultState =  {\r\n                        isChangingCRS: false,\r\n                        isChangingTransform:false,\r\n                        isReporting:false,\r\n                        qwery: '',\r\n                        result: [],\r\n                    }\r\n\r\nconst PopupReducer = (state:State = defaultState, action:any) => {\r\n    switch (action.type) {\r\n\r\n        case 'crs/toggle':\r\n            return {...state, isChangingCRS:(!state.isChangingCRS) };\r\n            \r\n        case 'transformation/toggle':\r\n            return {...state, isChangingTransform:(!state.isChangingTransform) };\r\n        \r\n        case 'repport/toggle':\r\n            return {...state, isReporting:(!state.isReporting) };\r\n\r\n        case 'crs/setQwery':\r\n            return {...state, qwery:action.payload};\r\n        \r\n        case 'crs/setResult':\r\n            return {...state, result:action.payload};\r\n\r\n        default:\r\n            return state;\r\n    };\r\n\r\n};\r\n\r\nexport default PopupReducer;","import CRS from '../@types/CRS';\r\n\r\ninterface Transformation {\r\n    name: string,\r\n    area?: string,\r\n    accuracy?: string,\r\n    wkt: string,\r\n}\r\n\r\ntype settings = {\r\n    modifiedCRS: 'source' | 'target',\r\n    source:CRS,\r\n    target:CRS,\r\n    zAxe:boolean,\r\n    DMS:boolean,\r\n    transform?: Transformation,\r\n}\r\n\r\nconst  _default:settings = {\r\n    modifiedCRS:'source',\r\n    source:{},\r\n    target:{},\r\n    zAxe:false,\r\n    DMS:false,\r\n    transform: {\r\n        name: '',\r\n        wkt: ''\r\n    }\r\n};\r\n\r\nconst SettingsReducer = (state:settings = _default, action:any) => {\r\n    switch (action.type) {\r\n        case 'setOrigin':\r\n            return {...state, modifiedCRS:action.payload}\r\n\r\n        case 'setCRS':\r\n            return {...state, [state.modifiedCRS]:action.payload}\r\n        \r\n        case 'toggleZAxe':\r\n                return {...state, zAxe:action.payload}\r\n        \r\n        case 'toggleDMS':\r\n            return {...state, DMS:action.payload}\r\n\r\n        case 'setTransform':\r\n            if (typeof action.payload === typeof state.transform ){\r\n                return {...state, transform: action.payload}\r\n            }\r\n            return {...state}\r\n\r\n        default:\r\n            return state;\r\n    };\r\n\r\n};\r\n\r\nexport default SettingsReducer;","const HistoryReducer = (state=false, action:any) => {\r\n    switch (action.type) {\r\n        default:\r\n            return state;\r\n    };\r\n\r\n};\r\n\r\nexport default HistoryReducer;","import { combineReducers,  } from \"redux\";\r\n\r\nimport PopupReducer from \"./popups\";\r\nimport SettingsReducer from \"./settings\";\r\nimport HistoryReducer from \"./histories\";\r\n\r\nconst rootReducer = combineReducers({\r\n    popups: PopupReducer,\r\n    settings: SettingsReducer,\r\n    history: HistoryReducer,\r\n});\r\n\r\nexport type RootState = ReturnType<typeof rootReducer>;\r\nexport default rootReducer;","import { createStore } from '@reduxjs/toolkit'\r\nimport { saveState, loadState } from './persist';\r\n\r\n\r\nimport rootReducer from '../reducers';\r\n\r\nconst throttle = require('lodash.throttle');\r\n\r\nconst persistantState = loadState();\r\n\r\nconst store = createStore(\r\n        rootReducer,\r\n        persistantState,\r\n        (window as any).__REDUX_DEVTOOLS_EXTENSION__ &&\r\n        (window as any).__REDUX_DEVTOOLS_EXTENSION__()\r\n    );\r\n\r\nstore.subscribe(throttle(() => {\r\n    saveState({\r\n            settings: store.getState().settings,\r\n        });\r\n    }, 1000));\r\n\r\nexport default store;","export const loadState = () => {\r\n    try {\r\n      const serializedState = localStorage.getItem('state');\r\n      if (serializedState === null) {\r\n        return undefined;\r\n      }\r\n      return JSON.parse(serializedState);\r\n    } catch (err) {\r\n      return undefined;\r\n    }\r\n  };\r\n  \r\nexport const saveState = (state:any) => {\r\n    const serializedState = JSON.stringify(state);\r\n    localStorage.setItem('state', serializedState);\r\n\r\n};","function cleanText(value){\r\n    const toRemove = new RegExp(/\"/, 'g');\r\n    const space = new RegExp(/_/, 'g');\r\n    return value.replace(space, ' ').replace(toRemove, '')\r\n}\r\n\r\n\r\nexport function parseProjection(wkt) {\r\n    const re = /PROJECTION\\[(.*?)\\]/;\r\n    const projection = wkt.match(re)\r\n    if (projection)\r\n        return cleanText(projection[1])\r\n    return null\r\n}\r\n\r\nexport function parseParameters(wkt) {\r\n    const re = new RegExp(/PARAMETER\\[(.*?)\\]/, 'g');\r\n    const list = Array.from(wkt.matchAll(re), item => item[1]);\r\n\r\n    const lineToObject = value => {\r\n        const separator = new RegExp(/,/, 'g');\r\n        const item = value.split(separator).map(i => cleanText(i));\r\n        return {name:item[0], value:item[1]}\r\n    }\r\n\r\n    const res = list.map(value =>  lineToObject(value));\r\n    if (res)\r\n        return res\r\n    return []\r\n}","import { useSelector } from \"react-redux\"\r\nimport { RootState } from \"reducers\"\r\n\r\nimport {parseProjection, parseParameters} from './parseWKT'\r\n\r\ntype Props  = {\r\n    name: 'source' | 'target'\r\n}\r\nfunction BaseInformation({data}:any){\r\n    return (\r\n        <div className=\"about__base\" key='base'>\r\n            <h4 className=\"about__block-title\">Base:</h4>\r\n            <ul className=\"about__list\">\r\n                <li className=\"about__description about__name\" key={data.name}>Name: {data.name}</li>\r\n                <li className=\"about__description about__code\" key={data.code}>EPSG: {data.code}</li>\r\n                <li className=\"about__description about__kind\" key={data.unityOfMeasure}>Unity:{data.unityOfMeasure}</li>\r\n                <li className=\"about__description about__kind\" key={data.kind}>Kind: {data.kind}</li>\r\n                <li className=\"about__description about__bounds\" key='borders'>\r\n                    WGS84 borders:\r\n                    <ul className=\"about__list borders__list\">\r\n                        <li className=\"about__bounds-item\">west: {data.bounds?.westBoundLon} - east:{data.bounds?.eastBoundLon}</li>\r\n                        <li className=\"about__bounds-item\">north: {data.bounds?.northBoundLat} - south: {data.bounds?.southBoundLat}</li>\r\n                    </ul>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nfunction Elipsoid({data}:any){\r\n    return (\r\n            <ul className=\"about__list\">\r\n                        { (data.ellipsoid) ?\r\n                            <li className=\"about__description ellipsoid about__code\">\r\n                                Elipsoid: {data.ellipsoid.name}\r\n                                <ul className=\"about__list about__elispoid\">\r\n                                    <li className=\"about__bounds-item\">Semi major axis: {data.ellipsoid.semiMajorAxis}</li>\r\n                                    <li className=\"about__bounds-item\">Inverse flattening: {data.ellipsoid.invFlattening}</li>\r\n                                </ul>\r\n                            </li>:null\r\n                        }\r\n            </ul>\r\n    )\r\n}\r\nfunction CoordinateSystem({data}:any){\r\n    return (\r\n        <ul className=\"about__list\">\r\n                { (data.coordinateSystem) ?\r\n                    <li className=\"about__description about__code\">\r\n                        Coordinate System:\r\n                        <ul className=\"about__list about__coordinate-system\">\r\n                            <li className=\"about__bounds-item\">Name: {data.coordinateSystem.name}</li>\r\n                            <li className=\"about__bounds-item\">Type: {data.coordinateSystem.type}</li>\r\n                            <li className=\"about__bounds-item\">Dimension: {data.coordinateSystem.dimension}</li>\r\n                            \r\n                            { (parseProjection(data?.wkt)) ? \r\n                                <li className=\"about__bounds-item\" key='wkt'>Projection: {parseProjection(data?.wkt)}</li>:null\r\n                            }\r\n                            { parseParameters(data?.wkt)?.map(\r\n                                item =><li className=\"about__bounds-item\" key={item.name}>{item.name}: {item.value}</li>\r\n                            )}\r\n                        \r\n                        </ul>\r\n                    </li>:null\r\n                }\r\n        </ul>\r\n    )\r\n}\r\n\r\nfunction Datum({data}:any){\r\n    return (       \r\n        <ul className=\"about__list\">\r\n            { (data.datum) ?\r\n                <li className=\"about__description datum about__code\">\r\n                    Datum:\r\n                    <ul className=\"about__list about__datum\" >\r\n                        <li className=\"about__bounds-item\" key={data.datum.name}>Name: {data.datum.name}</li>\r\n                        <li className=\"about__bounds-item\" key={data.datum.type}>Type: {data.datum.type}</li>\r\n                    </ul>\r\n                </li>:null\r\n            }\r\n        </ul>\r\n    )\r\n}\r\nexport default function AboutItem({name}:Props) {\r\n    const data = useSelector(({settings}:RootState)=>settings[name])\r\n    return (\r\n            <div className={`about__colomn about__colomn-crs about__colomn-${name}`}>\r\n                <h4 className='about__colomn-title'> About {name} coordinate referance system </h4>\r\n                <BaseInformation data={data}/>\r\n                <div className=\"about__advance\" key='advance'>\r\n                    <h4 className=\"about__block-title\">Advance:</h4>\r\n                    <Elipsoid data={data}/>\r\n                    <CoordinateSystem data={data}/>\r\n                    <Datum data={data}/>\r\n                </div>\r\n            </div>\r\n    )\r\n}","export async function fetchTransformationPropreties(source:any, target:any) {\n    let res = await (\n              await fetch(`${process.env.REACT_APP_HOST}/api/deftransform/?format=json&source=${source}&target=${target}`)\n              .catch()).json();\n    return res;\n}\n\nexport async function fetchTransformationList(source:any, target:any) {\n    let res = await (\n              await fetch(`${process.env.REACT_APP_HOST}/api/enumtransform/?format=json&source=${source}&target=${target}`)\n              .catch()).json();\n    return res;\n}","export const setQwery = (value:String) => {\r\n    return {\r\n        type: 'crs/setQwery',\r\n        payload: value\r\n    }\r\n}\r\n\r\nexport const setResult = (value:any) => {\r\n    return {\r\n        type: 'crs/setResult',\r\n        payload:  value\r\n    }\r\n}\r\n\r\nexport const togglePopup = (state:boolean) => {\r\n    return {\r\n        type: 'crs/toggle',\r\n        payload: state\r\n    }\r\n}\r\n\r\nexport const toggleTransformPopup = (state:boolean) => {\r\n    return {\r\n        type: 'transformation/toggle',\r\n        payload: state\r\n    }\r\n}\r\n\r\nexport const toggleRepport = (state:boolean) => {\r\n    return {\r\n        type: 'repport/toggle',\r\n        payload: state\r\n    }\r\n}","import ReactDOM from 'react-dom';\r\nimport './popup.css';\r\n\r\nfunction Popup ({isOpen, name, children}) {\r\n  if (!isOpen) return null;\r\n  return ReactDOM.createPortal (\r\n    <div className={`popup popup--${name}`}>\r\n      <div className={`popup__inner popup__inner--${name}`} >\r\n        {children}\r\n      </div>\r\n    </div>,\r\n    document.getElementById('popups')\r\n    );\r\n}\r\n\r\nexport default Popup;","function BackIcon(props) {\r\n    return (\r\n        <svg width='15' height='15' viewBox=\"0 0 492.004 492.004\" {...props} style={{transform: 'scaleX(-1)'}}>\r\n\t\t    <path d=\"M484.14,226.886L306.46,49.202c-5.072-5.072-11.832-7.856-19.04-7.856c-7.216,0-13.972,2.788-19.044,7.856l-16.132,16.136\r\n                c-5.068,5.064-7.86,11.828-7.86,19.04c0,7.208,2.792,14.2,7.86,19.264L355.9,207.526H26.58C11.732,207.526,0,219.15,0,234.002\r\n                v22.812c0,14.852,11.732,27.648,26.58,27.648h330.496L252.248,388.926c-5.068,5.072-7.86,11.652-7.86,18.864\r\n                c0,7.204,2.792,13.88,7.86,18.948l16.132,16.084c5.072,5.072,11.828,7.836,19.044,7.836c7.208,0,13.968-2.8,19.04-7.872\r\n                l177.68-177.68c5.084-5.088,7.88-11.88,7.86-19.1C492.02,238.762,489.228,231.966,484.14,226.886z\"/>\r\n        </svg>\r\n    );\r\n}\r\n\r\nexport default BackIcon;","function CloseIcon(props) {\r\n    return (\r\n        <svg height=\"10px\" width=\"10px\" viewBox=\"0 0 329.26933 329\">\r\n            <path d=\"m194.800781 164.769531 128.210938-128.214843c8.34375-8.339844 8.34375-21.824219 \r\n                    0-30.164063-8.339844-8.339844-21.824219-8.339844-30.164063 0l-128.214844 \r\n                    128.214844-128.210937-128.214844c-8.34375-8.339844-21.824219-8.339844-30.164063 \r\n                    0-8.34375 8.339844-8.34375 21.824219 0 30.164063l128.210938 128.214843-128.210938 \r\n                    128.214844c-8.34375 8.339844-8.34375 21.824219 0 30.164063 4.15625 4.160156 9.621094 6.25 \r\n                    15.082032 6.25 5.460937 0 10.921875-2.089844 15.082031-6.25l128.210937-128.214844 128.214844 \r\n                    128.214844c4.160156 4.160156 9.621094 6.25 15.082032 6.25 5.460937 0 10.921874-2.089844 \r\n                    15.082031-6.25 8.34375-8.339844 8.34375-21.824219 0-30.164063zm0 0\"/>\r\n        </svg>\r\n    );\r\n}\r\n\r\nexport default CloseIcon;","import { useMobileOnly } from 'hooks/useMobileOnly';\r\n\r\nimport BackIcon from '../../../../../icons/back-icon';\r\nimport CloseIcon from '../../../../../icons/close-icon';\r\n\r\nimport '../common.sass';\r\nimport './menu.sass';\r\n\r\nfunction Interface({onClose}) {\r\n        const isMobile = useMobileOnly();\r\n        return (\r\n                <div className=\"popup__menu-bar\">\r\n                        <button \r\n                        className='popup__close-btn'\r\n                        onClick={onClose}>\r\n                                { (isMobile) ? <><BackIcon/><span>Back</span></> : <CloseIcon/> }\r\n                        </button>\r\n                </div>\r\n        );\r\n}\r\n\r\nexport default Interface;","import { useState, useEffect } from \"react\";\r\n\r\nexport function useMobileOnly () {\r\n    const size = 1024; // this is the limit of screen size for a desktop\r\n    const [isMobile, toggleMobile] =  useState(window.innerWidth <= size);\r\n    const handleScreen = () => toggleMobile(window.innerWidth <= size);\r\n\r\n    useEffect(() => {\r\n            window.addEventListener('resize', handleScreen);\r\n            return () => window.removeEventListener('resize', handleScreen);\r\n    }, []);\r\n\r\n    return isMobile\r\n}","\r\ntype crsHeandler = {\r\n    type: string,\r\n    payload: payload\r\n};\r\n\r\ntype payload = {\r\n    name: string,\r\n    code?: number,\r\n    uom?: string,\r\n    area?: string,\r\n    proj4?: string,\r\n};\r\n\r\ninterface Transformation {\r\n    name: string,\r\n    area?: string,\r\n    accuracy?: string,\r\n}\r\n\r\ntype origin = 'source' | 'target'\r\n\r\nexport const setCRS = (payload:payload):crsHeandler => {\r\n    return {\r\n        type: 'setCRS',\r\n        payload: {...payload}\r\n    };\r\n};\r\n\r\nexport const setOrigin = (payload:origin) => {\r\n    return {\r\n        type: 'setOrigin',\r\n        payload: payload\r\n    }\r\n}\r\n\r\nexport const toggleZAxe = (payload:boolean) => {\r\n    return {\r\n        type: 'toggleZAxe',\r\n        payload: payload\r\n    }\r\n}\r\n\r\nexport const toggleDMS = (payload:boolean) => {\r\n    return {\r\n        type: 'toggleDMS',\r\n        payload: payload\r\n    }\r\n}\r\n\r\nexport const setTransform = (payload:Transformation) => {\r\n    return {\r\n        type: 'setTransform',\r\n        payload: payload\r\n    }\r\n}","import { useDispatch } from 'react-redux';\n\nimport {setTransform} from 'actions/settings';\n\nexport default function Item({transformation, onSelect, isSelected=false}) {\n    const dispatch = useDispatch();\n    const handleSelect = () => {\n        dispatch(setTransform(transformation));\n        onSelect()\n    };\n    return (\n        <div className={`result__item`} onClick={handleSelect}>\n            <div className=\"result__item-about\" >\n                <h3 className='result__item-title'>Name: {transformation.name}</h3>\n                <h4 className='result__item-description'>Accuracy: {transformation.accuracy}</h4>\n                <h4 className='result__item-description'>Area: {transformation.area}</h4>\n                {isSelected && <span style={{\"color\":\"red\"}}>Selected</span>}\n            </div>\n        </div > \n    );\n};","import './result.sass';\n\nexport default function Result ({children, className}) {\n    if (children === undefined) return null;\n    if (!Array.isArray(children)) return children;\n    return(\n        <div className={`result result--${className}`}>\n            <div className={`result__inner result__inner--${className}`}>\n                {children.map(child => child)} \n            </div>\n        </div>\n    )\n}","import { useSelector } from 'react-redux';\nimport { useEffect, useState } from 'react';\n\nimport Item from '../../item';\nimport Result from 'components/common/list/result';\n\nimport { fetchTransformationList } from '../../../api';\n\nimport './view.sass';\n\nexport default function TransformationView({onClose, onImport}) {\n    const [source, target, transform] = useSelector(({settings}) => [settings.source, settings.target, settings.transform.name]);\n    const [list, setList] =  useState([]);\n\n    useEffect(() => {\n        fetchTransformationList(source.code, target.code).then(i => setList(i))\n    }, [source, target]);\n\n    return (\n        <div className=\"transform\">\n            <div className=\"transform__inner\">\n                <Result className='transform'>\n                    {list.reverse().map((transformation) => {\n                        \n                        return <Item \n                            transformation={transformation}\n                            onSelect={onClose}\n                            isSelected={transform === transformation.name}\n                         /> \n                    \n                    })}\n                </Result>\n                <div className=\"transform__menu\">\n                    <button className='transformation__btn transform__import' onClick={onImport}>Import transformation</button>\n                </div>\n            </div>\n        </div>\n    );\n};","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { setTransform } from 'actions/settings';\n\nimport './view.sass';\n\nexport default function CustomeTransformationView({onClose, onImport}) {\n    const dispatch = useDispatch();\n    const sourceName = useSelector(({settings}) => settings.transform.name)\n    const sourceWKT = useSelector(({settings}) => settings.transform.wkt)\n\n    const [name, setName] = useState(sourceName);\n    const [wkt, setWKT] = useState(sourceWKT);\n\n    const handleSelect = () => {\n        dispatch(setTransform({name:name, wkt:wkt}));\n        onClose();\n    };\n\n    const clear = () => {\n        setName('');\n        setWKT('');\n    };\n\n    return (\n        <div className=\"transform\">\n            <div className=\"transform__inner\">\n                <label>Name:</label>\n                <input type=\"text\" className='transform__wkt-name' value={name} onChange={e => setName(e.target.value)}/>\n                <textarea className='transform__wkt-text' placeholder='Place your wkt or proj' value={wkt} onChange={e => setWKT(e.target.value)}></textarea>\n                <div className=\"transform__menu\">\n                    <button className='transformation__btn transform__clear' onClick={onImport}>Back</button>\n                    <button className='transformation__btn transform__clear' onClick={clear}>Clear</button>\n                    <button className='transformation__btn transform__import' onClick={handleSelect}>Load</button>\n                </div>\n            </div>\n        </div>\n    );\n};","import { useState } from 'react';\nimport { useSelector } from 'react-redux';\n\nimport Popup from 'components/common/popup/popup';\nimport Interface from 'components/common/popup/interface/menu-bar/menu';\n\nimport TransformationView from './views/List';\nimport CustomeTransformationView from './views/Costume';\n\nimport './popup.sass';\n\n\nfunction TransformationPopup({ onClose }) {\n    const state = useSelector(state => state.popups.isChangingTransform);\n    const [isImporting, toggleImported] = useState(false);\n\n    const close = () => {\n        toggleImported(false)\n        onClose()\n    }\n\n    return (\n        <Popup isOpen={state} name='transform'>\n            <Interface onClose={close}/>\n            <div className=\"view--transform\">\n                <div className=\"view__inner--transform\">\n                    {\n                        (isImporting) ?\n                            <CustomeTransformationView onClose={onClose} onImport={() => toggleImported(false)}/>\n                        :\n                            <TransformationView onClose={onClose} onImport={() => toggleImported(true)}/>\n                    }\n                </div>\n            </div>\n        </Popup>\n    )\n}\n\nexport default TransformationPopup;","import { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport {fetchTransformationList} from '../api';\r\n\r\nimport { RootState } from \"reducers\"\r\nimport { useEffect } from 'react';\r\n\r\nimport { toggleTransformPopup } from 'actions/popups';\r\nimport TransformationPopup from '../popup'\r\nimport {setTransform} from 'actions/settings';\r\n\r\nexport default function CrsIntersection() {\r\n    const dispatch =  useDispatch();\r\n    const [source, target, transform] = useSelector(({settings}:RootState)=> [settings.source, settings.target, settings.transform]);\r\n    \r\n    const closePopup = () => dispatch(toggleTransformPopup(false));\r\n    const openPopup = () => dispatch(toggleTransformPopup(true));\r\n    \r\n    \r\n    useEffect (()=>{\r\n        fetchTransformationList(source.code, target.code)\r\n        .then(res=>dispatch(setTransform(res[0])))\r\n        \r\n    }, [source, target]);\r\n    \r\n    return (\r\n        <>\r\n            <div className={`about__colomn about__colomn-intersection`} onClick={openPopup}>\r\n                <h3 className='about__colomn-title'>Transformation: </h3>\r\n                <h5 className=''>{transform?.name}</h5>\r\n            </div>\r\n            <TransformationPopup onClose={closePopup}/>\r\n        </>\r\n\r\n    )\r\n}","import CrsDecription from './info/crs'\r\nimport CrsIntersection from './info/intersection'\r\n\r\nimport './index.sass';\r\n\r\nexport default function About() {\r\n\r\n    return (\r\n        <div className='converter__about-transformation about'>\r\n            <div className=\"about__inner\">\r\n                <CrsDecription name='source' key={1}/>\r\n                <CrsIntersection />\r\n                <CrsDecription name='target' key={2}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}","function SearchIcon(props) {\r\n    return (\r\n        <svg width=\"15px\" height=\"12px\" viewBox=\"0 0 612.01 612.01\" {...props}>\r\n            <path d=\"M606.209,578.714L448.198,423.228C489.576,378.272,515,318.817,515,253.393C514.98,113.439,399.704,0,257.493,0\r\n                        C115.282,0,0.006,113.439,0.006,253.393s115.276,253.393,257.487,253.393c61.445,0,117.801-21.253,162.068-56.586\r\n                        l158.624,156.099c7.729,7.614,20.277,7.614,28.006,0C613.938,598.686,613.938,586.328,606.209,578.714z M257.493,467.8\r\n                        c-120.326,0-217.869-95.993-217.869-214.407S137.167,38.986,257.493,38.986c120.327,0,217.869,95.993,217.869,214.407\r\n                        S377.82,467.8,257.493,467.8z\"/>\r\n        </svg>\r\n    );\r\n}\r\n\r\nexport default SearchIcon;","async function getRequest(app:String, key:String, parrams:string | number) {\r\n    return (await fetch(`${process.env.REACT_APP_HOST}/api/${app}/?format=json&${key}=${parrams}`).catch()).json();\r\n}\r\n\r\nexport async function fetchCRSList(quest:string){\r\n    return await getRequest('search', 'q', quest);\r\n}\r\n\r\nexport async function fetchAboutCRS(code:number) {\r\n    return await getRequest('about', 'crs',  code);\r\n}\r\n\r\nexport async function fetchTransfrom(source:number, target:number, point:Array<any>, proj:any) {\r\n    const getCookie = (name: string) => {\r\n        let cookieValue = '';\r\n        if (document.cookie && document.cookie !== '') {\r\n            const cookies = document.cookie.split(';');\r\n            for (let i = 0; i < cookies.length; i++) {\r\n                const cookie = cookies[i].trim();\r\n                if (cookie.substring(0, name.length + 1) === (name + '=')) {\r\n                    cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        return cookieValue;\r\n    }\r\n    const data = {\r\n        s_crs:source,\r\n        t_crs:target,\r\n        x:point[0],\r\n        y:point[1],\r\n        z:point[2],\r\n        proj:proj,\r\n    }\r\n\r\n    return await (\r\n        await fetch(`${process.env.REACT_APP_HOST}/api/transform/`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'X-CSRFToken': getCookie('csrftoken'),\r\n            },\r\n            body: JSON.stringify(data)\r\n\r\n        }).catch()).json();\r\n}","import { useEffect, useState } from \"react\";\r\nimport { DefaultRootState, useDispatch, useSelector } from \"react-redux\";\r\nimport _ from 'underscore';\r\n\r\nimport { setQwery, setResult } from \"actions/popups\";\r\n\r\nimport { fetchCRSList } from \"components/settings/crs-selector/popup/api\";\r\n\r\nexport default function useSearchBar() {\r\n    const dispatch = useDispatch();\r\n    const [localState, handleLocalState] = useState<string>('');\r\n    const state = useSelector(({popups}:DefaultRootState) => popups.qwery, _.isEqual);\r\n    const fetchListHandle = (value?:string) => {\r\n        fetchCRSList(value || localState).then(res => {\r\n            dispatch(setQwery(value || localState));\r\n            dispatch(setResult(res));\r\n        })\r\n    }\r\n    useEffect(() => {\r\n        handleLocalState(state);\r\n    }, [state])\r\n    return [localState, handleLocalState, fetchListHandle]\r\n}","import SearchIcon from 'icons/search-icon';\r\nimport CloseIcon from 'icons/close-icon';\r\n\r\nimport useSearchBar from 'hooks/useSearchBar';\r\n\r\nimport './search.sass';\r\n\r\nexport default function Search() {\r\n    const [qwery, qweryChange, handleResult] = useSearchBar();\r\n    const clearQwery = () => qweryChange('');\r\n\r\n    return (\r\n        <div className='search'>\r\n            <div className='search__inner'>\r\n                <div className=\"search__bar\">\r\n                    <div className=\"search__bar-inner\">\r\n                        <input \r\n                            className='search__field' \r\n                            onChange={event=>qweryChange(event.target.value)} \r\n                            onKeyPress={e=> e.key==='Enter' && handleResult(qwery)}\r\n                            value={qwery}/>\r\n                        {qwery && <button className='search__btn search__btn-clear' onClick={clearQwery}><CloseIcon/></button> }\r\n                        <button className='search__btn search__btn-find' onClick={()=>handleResult(qwery)}><SearchIcon/></button>\r\n                    </div>\r\n                </div>\r\n                <div className=\"search__filters\">\r\n                    <div className=\"search__uom\">\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n","import { useSelector } from \"react-redux\";\r\nimport { RootState } from \"reducers\";\r\n\r\n\r\ntype Props = 'source' | 'target' | undefined;\r\n\r\nexport default function useCRSelector(_origin:Props=undefined){\r\n    \r\n    const _global_origin =  useSelector(({settings}:RootState) => settings.modifiedCRS);\r\n    const _local_origin = _origin || _global_origin;\r\n    \r\n    const origin = (_local_origin === 'source') ? 'source' : 'target';\r\n\r\n    const self = useSelector((state:RootState) => state.settings[origin]);\r\n    \r\n    const oppositName = origin === 'source' ? 'target' : 'source';\r\n    const other = useSelector((state:RootState)  => state.settings[oppositName]);\r\n\r\n    return [self, other, origin];\r\n}","import CRS from '../@types/CRS'\r\n\r\nimport { useDispatch } from \"react-redux\";\r\nimport { fetchAboutCRS } from \"components/settings/crs-selector/popup/api\";\r\nimport { setCRS } from \"actions/settings\";\r\n\r\ninterface Selected extends CRS {\r\n    code:number,\r\n}\r\n\r\nexport default function useCRS () {\r\n    const dispatch = useDispatch();\r\n    const set = (item:Selected) => {\r\n        fetchAboutCRS(item?.code).then((res:any)=>{\r\n            dispatch(setCRS({...res}));\r\n        });\r\n    };\r\n    return set\r\n}","import { useDispatch } from 'react-redux';\r\nimport { togglePopup } from 'actions/popups';\r\n\r\nimport { useRef, memo, useEffect, useState } from 'react';\r\n\r\nimport useCRSelector from 'hooks/useCRSelector';\r\nimport useCRS  from 'hooks/useCRS';\r\n\r\nimport './item.sass'\r\n\r\nexport default memo(function CrsItem({element}) {\r\n    const dispatch = useDispatch();\r\n    const wraper =  useRef(null);\r\n    const item = useRef(null);\r\n    \r\n    const closeWindow = () => dispatch(togglePopup(false));\r\n    const [self, other,] = useCRSelector();\r\n    const [isAlreadySelected, toggleAlreadySelected] = useState(false);\r\n\r\n    useEffect(()=>toggleAlreadySelected(self?.code===element.code || other?.code === element.code), [self, other, element.code])\r\n    \r\n    const setCRS = useCRS();\r\n    const handleSelect = () => {\r\n        setCRS(element);\r\n        closeWindow();\r\n    }\r\n\r\n    return (\r\n        <div className={`result__item ${(isAlreadySelected) ? 'result__item--selected':null }`} \r\n             key={element.code} ref={wraper} onClick={handleSelect} ref={item}>\r\n                <div className=\"result__item-about\" >\r\n                    <h3 className='result__item-title'>{element.name} {(isAlreadySelected) ? <span style={{\"color\":\"red\"}}>Selected</span>:null } </h3>\r\n                    <h4 className='result__item-description result__item-description--area'>Area: {element.area}</h4>\r\n                    <h4 className='result__item-description result__item-description--unity'>Unity: {element.unityOfMeasure}</h4>\r\n                    <h4 className='result__item-description result__item-description--code'>EPSG Code: {element.code}</h4>\r\n                </div>\r\n        </div > \r\n    );\r\n});","import { useEffect, useState} from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport _ from 'underscore';\r\n\r\nimport CrsItem from '../item/item';\r\n\r\nimport Result from 'components/common/list/result';\r\n\r\nimport './result.sass'\r\n\r\nexport default function ResultCRS () {\r\n    const settings = useSelector(state => state.settings, _.isEqual);\r\n    const result = useSelector(state => state.popups.result);\r\n    const [find, setFind] = useState(result?.findCRS);\r\n\r\n    useEffect(() => {\r\n        if (settings?.modifiedCRS === 'target' && result?.findCRS?.length > 1) {\r\n            const data = find?.filter(item => item.code !== settings.source.code);\r\n            setFind(data);\r\n        }\r\n        setFind(result?.findCRS)\r\n    }, [result?.findCRS, find, settings])\r\n\r\n    return(\r\n        <Result className='crs'>\r\n            {find?.map(elem => <CrsItem element={elem} key={elem.code} /> )}\r\n        </Result>\r\n    )\r\n}","import Search from './search';\r\nimport ResultCRS from './result/result';\r\n\r\nimport './view.sass';\r\n\r\nexport default function SearchView() {\r\n    return (\r\n        <div className=\"view__search\">\r\n            <Search />\r\n            <ResultCRS />\r\n        </div>\r\n    );\r\n};","// @ts-nocheck\r\nimport { useRef, useEffect,  memo } from 'react';\r\nimport { feature } from 'topojson';\r\nimport * as d3 from 'd3';\r\n\r\nimport world from '../../../data/map.json';\r\n\r\nimport './globe.sass'\r\n\r\nexport default memo(function Globe({width, height, onSelect}) {\r\n        \r\n    const svgRef = useRef(null);\r\n    const rotate = useRef([0,0,0]);\r\n    const World = feature(world, world.objects.collection);\r\n\r\n    useEffect(()=>{\r\n        rotate.current =  (typeof window.localStorage.getItem('rotate') === 'string') ?\r\n                        JSON.parse(window.localStorage.getItem('rotate')) : rotate.current;\r\n    }, [])\r\n    \r\n    //globe logic\r\n    useEffect(() => {\r\n\r\n            const graticule = d3.geoGraticule();\r\n            const projection = d3.geoOrthographic()\r\n                            .scale(width/3.5) //3.5 is scale coef witch work well with width*0.8 of parent size and inherit heeght\r\n                            .translate([width/3, height/3])\r\n                            .rotate(rotate.current);\r\n\r\n            const path = d3.geoPath(projection);\r\n            const svg = d3.select(svgRef.current);\r\n            const g = svg.append('g')\r\n\r\n            g.append('path')\r\n                .attr('class', 'sphere')\r\n                .attr('d', path({type: 'Sphere'}))\r\n                .on(\"click\", (event,d)=>{\r\n                    onSelect(\"World\")\r\n                });\r\n\r\n            g.append('path')\r\n                .datum(graticule)\r\n                .attr(\"class\", \"graticule\")\r\n                .attr('d', path)\r\n            \r\n            g.selectAll('.country')\r\n                .data(World.features)\r\n                .enter()\r\n                .append('path')\r\n                .attr('d', path)\r\n                .attr('class', 'country')\r\n            \r\n            \r\n            /*                  Listeners\r\n            ###################################################\r\n            ###################################################\r\n            */\r\n            \r\n            g.selectAll('.country')\r\n                .on(\"click\", (event, d) => {\r\n                    onSelect(d.properties.name)\r\n                });\r\n            \r\n            g.call(d3.drag()\r\n                            .on(\"drag\", (event, d) => {\r\n                                    const k = 50 / projection.scale()\r\n                                    rotate.current = projection.rotate();\r\n                                    projection.rotate([\r\n                                    rotate.current[0] + event.dx * k,\r\n                                    rotate.current[1] - event.dy * k\r\n                                ])\r\n                                \r\n                                g.selectAll(\".graticule\").attr(\"d\", path);\r\n                                g.selectAll(\"path\").attr(\"d\", path)\r\n                                g.selectAll('.sphere').attr(\"d\", path({type: 'Sphere'}))\r\n\r\n                            })\r\n                            .on(\"end\", (event, d) => {\r\n                                window.localStorage.setItem('rotate', JSON.stringify(projection.rotate()));\r\n                            })\r\n            );\r\n            \r\n            g.call(d3.zoom()\r\n                .scaleExtent([1, 10])\r\n                .on('zoom', event => {\r\n                    g.selectAll('country', event.transform);\r\n                }, {passive: true})\r\n            );\r\n            \r\n            return () => {\r\n                svg.selectAll('g').remove()\r\n            }\r\n            \r\n            }, [World.features, rotate, width, height, onSelect]);\r\n\r\n    return <svg width={width} height={height} ref={svgRef}/>\r\n});","import useSearchBar from 'hooks/useSearchBar';\r\nimport useCurrentSize from '../../../../../../hooks/useCurrentSize';\r\n\r\nimport Globe from 'components/common/globe/globe';\r\n\r\nimport './view.sass';\r\n\r\nexport default function GlobeView() {\r\n    \r\n    const [, qweryChange, handleResult] = useSearchBar();\r\n    const handleSelect = (value) => {\r\n        qweryChange(value);\r\n        handleResult(value);\r\n    }\r\n\r\n    const [ref, container] = useCurrentSize();\r\n    \r\n    return (\r\n        <div className=\"view__globe\" ref={ref}>\r\n            {container.isRenderFinnished && <Globe width={container.width*0.8} height={container.height} onSelect={handleSelect}/>}\r\n        </div>\r\n    )\r\n}","import { useState, useLayoutEffect, useRef} from \"react\";\r\n\r\ntype Prop = {\r\n    isRenderFinnished:Boolean, \r\n    width?: number, \r\n    height?: number,\r\n}\r\n\r\nexport default function useCurrentSize() {\r\n\r\n    const ref = useRef<HTMLInputElement>(null);\r\n    const [container, sizeHandle] = useState<Prop>({isRenderFinnished:false});\r\n\r\n    useLayoutEffect(() => {\r\n        const handleResize = () => sizeHandle({\r\n                                                isRenderFinnished:true, \r\n                                                width: ref?.current?.offsetWidth,\r\n                                                height:ref?.current?.offsetHeight\r\n                                            });        \r\n        handleResize();\r\n        window.addEventListener('resize', handleResize, false);\r\n        return () => {\r\n            window.removeEventListener('resize', handleResize, false);\r\n        }\r\n    }, [])\r\n\r\n    return [ref, container] as const;\r\n}","import { useSelector } from 'react-redux';\r\n\r\nimport Popup from 'components/common/popup/popup';\r\nimport Interface from 'components/common/popup/interface/menu-bar/menu';\r\n\r\nimport SearchView from './views/search/view';\r\nimport GlobeView from './views/globe/view';\r\n\r\nimport './popup.sass';\r\n\r\nfunction CrsPopup({ onClose }) {\r\n    const state = useSelector(state => state.popups.isChangingCRS);\r\n\r\n    return (\r\n        <Popup isOpen={state} name='crs'>\r\n            <Interface onClose={onClose}/>\r\n            <div className=\"view--crs\">\r\n                <div className=\"view__inner--crs\">\r\n                    <SearchView />\r\n                    <GlobeView />\r\n                </div>\r\n            </div>\r\n        </Popup>\r\n    )\r\n}\r\n\r\nexport default CrsPopup;","import './button.sass';\n\n\nfunction AdvancedSelectBtn ({onClick, parameters}) {\n\n    return (\n        <button className='selector__btn selector__btn--advanced' onClick={onClick}>advanced search</button>\n    );\n}\n\nexport default AdvancedSelectBtn;","import { useRef, useState } from 'react';\nimport useCRSelector from 'hooks/useCRSelector';\nimport useCRS from 'hooks/useCRS';\n\nimport useOutsideClick from 'hooks/useOutsideClick';\n\nimport './button.sass';\n\n\nfunction DirectSelectBtn ({parameters, updateOrigin}) {\n    const [self,,]  = useCRSelector(parameters.origin)\n    const [EPSG, changeEPSG] = useState('');\n    const ref = useRef()\n    const [isChanging, toggleChange] = useOutsideClick(ref);\n    const value = isChanging ? EPSG : self.name || 'Click and enter CRS code';\n    const setCRS  = useCRS()\n    const validateChanges = evt => {\n        if (evt.key === \"Enter\") {\n            const item = {code:EPSG}\n            setCRS(item)\n        }\n    };\n    const onClick = () => {\n        updateOrigin()\n        changeEPSG('')\n        toggleChange(true)\n    }\n    return (\n        <div className=\"selector__direct\" key={parameters.origin}>\n            <input  className='selector__btn' ref={ref} value={value} \n                    onKeyPress={validateChanges}\n                    onClick={onClick} onChange={evt => changeEPSG(evt.target.value)} type='tel'/>\n        </div>\n    );\n}\n\nexport default DirectSelectBtn;","import {useState, useEffect} from 'react';\r\n\r\ninterface Div extends HTMLElement {\r\n    current: {\r\n        contains: Function\r\n    }\r\n};\r\n\r\nexport default function useOutsideClick(component:Div, exception=false) {\r\n    const [isActive, setActive] = useState<Boolean>(exception);\r\n    \r\n    useEffect(() => {\r\n        const handleClickOutside = (event:MouseEvent) => {\r\n            if ((isActive && component.current && !component.current.contains(event.target)) || !exception) {\r\n                    setActive(false);\r\n                }\r\n        }\r\n        document.addEventListener('mouseup', handleClickOutside);\r\n\r\n        return () => document.removeEventListener('mouseup', handleClickOutside);\r\n    }, [isActive, component, exception]);\r\n   \r\n    return [isActive, setActive] as const;\r\n}","import { useDispatch } from 'react-redux';\r\n\r\nimport useCRSCode from 'hooks/useCRSCode';\r\nimport CrsPopup from './popup/popup';\r\n\r\nimport AdvancedSelectBtn from '../button/advanced';\r\nimport DirectSelectBtn from '../button/direct';\r\n\r\nimport { togglePopup } from 'actions/popups';\r\nimport { setOrigin } from 'actions/settings';\r\n\r\nimport './crs-selector.sass';\r\n\r\nexport default function CrsSelector ({parameters}) {\r\n    const dispatch = useDispatch();\r\n\r\n    const closePopup = () => dispatch(togglePopup(false));\r\n    const openPopup = () => {\r\n        dispatch(togglePopup(true));\r\n        dispatch(setOrigin(parameters.origin))\r\n    }\r\n    const crsCode = useCRSCode(parameters.origin);\r\n\r\n    return (\r\n        <div className='selector'>\r\n            <div className='selector__header'>\r\n                <h3 className=\"field-title selector__title\">{parameters.title}</h3>\r\n            </div>\r\n            <div className='selector__container'>\r\n                <DirectSelectBtn parameters={parameters} updateOrigin={()=>dispatch(setOrigin(parameters.origin))}/>\r\n            </div>\r\n            <div className='selector__footer'>\r\n                <AdvancedSelectBtn onClick={openPopup} parameters={parameters}/>\r\n                EPSG: {crsCode}\r\n            </div>\r\n            <CrsPopup onClose={closePopup}/>\r\n        </div>\r\n    );\r\n};","import { DefaultRootState, useSelector } from \"react-redux\"\r\n\r\ntype crs = 'source' | 'target';\r\n\r\nexport default function useCRSCode (origin:crs) {\r\n    const code = useSelector(({settings}:DefaultRootState) => settings[origin].code)\r\n    return code;\r\n}","const common = {\r\n    title: ' coordinate reference system'\r\n};\r\n\r\nexport const source = {\r\n    title:('Source'+common.title),\r\n    origin: 'source',\r\n};\r\n\r\nexport const target = {\r\n    title:('Target'+common.title),\r\n    origin: 'target',\r\n};","import './settings.css';\r\n\r\nimport CrsSelector from './crs-selector/crs-selector'\r\nimport {source, target} from './parameters.js';\r\n\r\n\r\nfunction Settings() {\r\n    \r\n    return (\r\n        <div className=\"converter__settings\">\r\n            <CrsSelector parameters={source}/>\r\n            <CrsSelector parameters={target}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Settings;","import { toggleZAxe, toggleDMS } from \"actions/settings\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nexport default function ConverterPropretiesBtn(){\n    const dispatch = useDispatch();\n    const settings = useSelector(({settings}) => settings);\n    const zAxeChange = () => dispatch(toggleZAxe(!settings.zAxe));\n    const DmsChange = () => dispatch(toggleDMS(!settings.DMS));\n\n    return (\n        <div className='global-settings  selector__btn'>\n            Settings\n            <div className=\"global-settings__inner\">\n                <ul className=\"propreties__list\">\n                    <li>Z axe: <input onClick={zAxeChange} onChange={()=>null} checked={settings.zAxe} type='checkbox'/></li>\n                    <li>DMS result: <input onClick={DmsChange} onChange={()=>null} checked={settings.DMS} type='checkbox'/></li>\n                </ul>\n            </div>\n        </div>\n    )\n}","export default function Arrow(){\r\n    return (\r\n        <svg width=\"15px\" height=\"10px\" viewBox=\"0 0 612.01 612.01\">\r\n            <path d=\"M509.035,248.212l-213.504-212.8c-3.051-3.029-7.595-3.904-11.627-2.304c-3.989,1.664-6.571,5.547-6.571,9.856v117.333\r\n\t\t\tH10.667C4.779,160.298,0,165.076,0,170.964v170.667c0,5.888,4.779,10.667,10.667,10.667h266.667v116.885\r\n\t\t\tc0,4.309,2.603,8.192,6.592,9.856c1.323,0.555,2.709,0.811,4.075,0.811c2.773,0,5.504-1.088,7.552-3.115l213.504-213.419\r\n\t\t\tc2.005-2.005,3.115-4.715,3.115-7.552C512.171,252.927,511.04,250.218,509.035,248.212z\"/>\r\n        </svg>\r\n    )\r\n} "," export function convertToDMS (value, m = 0, s = 0)  {\r\n    value = value.toString();\r\n    if (value.length === 0) return \"0°0'0\"  \r\n    if (/'|\"/.test(value) === true) return value\r\n    \r\n    let d = value.split(\".\")[0];\r\n    if (value.split(\".\").length>1)\r\n    {\r\n      m = parseInt((\".\"+(value.split(\".\")[1]))*60);\r\n      s = Number((\".\"+(value.split(\".\")[1])-m/60)*3600).toFixed(6).replace(/(\\.0+|0+)$/, '');\r\n    }\r\n    return `${d}°${m}'${s}\"`\r\n};\r\n\r\nexport function convertToDecimal (value)  {\r\n    \r\n    // exception case  \r\n    if (value.length === 0) return '0'; // if value is empty\r\n    if (/'|\"/.test(value) === false) return value; // if value doesn't contain any separator\r\n    \r\n    //prepare value\r\n    value.replace('\"', ''); // \r\n    value = value.toLowerCase(); //\r\n\r\n    //if 'w' or 's' char in value\r\n    //then remove it and transform to oposit digit\r\n    const extract = (re, marker) => {\r\n      try{ \r\n        return value.match(re)[0].replace(marker, '')\r\n      }catch{\r\n        return 0\r\n      }\r\n    }\r\n\r\n    const reSign = /^-|w|e/g\r\n    const sign = (reSign.test(value)) ? -1:1\r\n    \r\n    const reDegree = /\\d+°/\r\n    const degree = extract(reDegree, '°')\r\n    \r\n    const reMinute = /\\d+'/\r\n    const minute = extract(reMinute, \"'\")\r\n    \r\n    const reSecond = /\\d+\"/\r\n    const second = extract(reSecond, '\"')\r\n    \r\n    const d = parseFloat(degree);\r\n    const m = parseFloat(minute/60);\r\n    const s = (second !== undefined) ? parseFloat(second/3600):0;\r\n    \r\n    return Number((d+m+s)*sign).toFixed(10).replace(/(\\.0+|0+)$/, '').toString();\r\n}","import {fetchTransfrom} from 'components/settings/crs-selector/popup/api'\r\nimport {convertToDecimal} from './format'\r\n\r\nexport default async function FetchConvertion(source, target, point, proj) {\r\n    const coordinate = Object.values(point)\r\n                                            .filter(value=> value.length > 0)\r\n                                            .map(prop=>convertToDecimal(prop))\r\n                                            .map(i => parseFloat(parseFloat(i).toFixed(8)))\r\n    var response;\r\n    await transform(source, target, coordinate, proj).then(res => response=res);\r\n    return {x:response[0], y:response[1], z:response[2]}\r\n}\r\n\r\nasync function transform(source, target, coordinate, proj) {\r\n    if (coordinate.length === 0) {\r\n        return ['-', '-', '-'];\r\n    }\r\n    return Object.values(await fetchTransfrom(source.code, target.code, coordinate, proj)).map(value => value.toString());\r\n}","import useCRSUnity from \"hooks/useCRSUnity\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nfunction Field({className, name, point, readOnly, placeholder, onChange}) {\r\n    return (\r\n        <input \r\n            className={`${className}-coordinate__field fields__item-field`}\r\n            onChange={onChange}\r\n            name={name}\r\n            value={point[name] || \"\"}\r\n            placeholder={placeholder}\r\n            autoComplete=\"off\"\r\n            readOnly={readOnly}\r\n            type='tel'/>\r\n\r\n    )\r\n};\r\n\r\nexport function Fields ({name, point, origin, onChange=()=>null}) {\r\n    const unity = useCRSUnity(origin);\r\n    const readOnly = name !== 'input';\r\n    const zAxe = useSelector(({settings})=> settings.zAxe);\r\n    return (\r\n        <div className={`${name}-fields__container fields__container`}>\r\n            \r\n            <Field className={name} name='x' onChange={onChange} point={point} readOnly={readOnly} placeholder={unity[0]}/>\r\n            <Field className={name} name='y' onChange={onChange} point={point} readOnly={readOnly} placeholder={unity[1]}/>\r\n            {(zAxe) ? <Field className={name} name='z' onChange={onChange} point={point} readOnly={readOnly} placeholder={unity[2]}/>:null}\r\n        </div>\r\n        )\r\n}","import { DefaultRootState, useSelector } from \"react-redux\"\r\n\r\ntype crs = 'source' | 'target'\r\n\r\nexport default function useCRSUnity (origin:crs) {\r\n    const unity = useSelector(({settings}:DefaultRootState) => settings[origin].unityOfMeasure)\r\n    const deglist = ['degree', 'unknown', 'sexagesimal', ' DMS.s'];\r\n    if (deglist.includes(unity+'')) return ['Latitude', 'Longitude', 'Altitude'];\r\n    return ['X', 'Y', 'Z'];\r\n}","import { Fields } from \"./fields\";\r\n\r\nexport function Input ({point, onChange}) {\r\n    const handleChange = event => {\r\n      onChange(prev => ({...prev, source:{...point, [event.target.name]:event.target.value}}));\r\n    }\r\n    return (\r\n      <div className=\"input-fields\">\r\n        <div className=\"input-fields__header\">\r\n        </div>\r\n        <div className=\"input-fields__container fields__container\">\r\n          <Fields name='input' point={point} origin={'source'} onChange={handleChange} />\r\n        </div>\r\n      </div>\r\n    )\r\n}","import { useSelector } from 'react-redux'\r\nimport { Fields } from './fields'\r\nimport { convertToDMS } from 'calculation/format'\r\nexport function Output ({point}) {\r\n\r\n  const DMS = useSelector(Root => Root.settings.DMS)\r\n  const points = (DMS && point.x !== undefined && point.y !== undefined) ? {x:convertToDMS(point.x), y:convertToDMS(point.y), z:point.z} : point\r\n  \r\n  return ( <div className=\"output-fields\">\r\n        <div className=\"output-fields__header\">\r\n        </div>\r\n        <div className=\"output-fields__container fields__container\">\r\n            <Fields name='output' point={points} origin='target' />\r\n        </div>\r\n      </div>\r\n    )\r\n}","import {useCallback, useState, useEffect } from 'react';\r\nimport { DefaultRootState, useSelector } from 'react-redux';\r\n\r\nimport  Arrow  from 'icons/arrow-icon'\r\nimport FetchConvertion from 'calculation/conversion';\r\n\r\nimport { Input } from './input.jsx';\r\nimport { Output } from './output.jsx';\r\n\r\nimport './block.sass';\r\n\r\ntype Points = {\r\n  source: Point,\r\n  target: Point\r\n};\r\n\r\ntype Point = {\r\n  x?: string\r\n  y?: string\r\n  z?: string\r\n\r\n};\r\ntype Props = {\r\n  onConvert: {\r\n    current: Function | null\r\n  } \r\n}\r\n\r\nexport function PointConverter ({onConvert}:Props) {\r\n  const [points, pointHandle] = useState<Points>({source:{}, target:{}})\r\n  const source = useSelector(({settings}:DefaultRootState)=>settings.source);\r\n  const target = useSelector(({settings}:DefaultRootState)=>settings.target);\r\n  const proj = useSelector(({settings}:DefaultRootState)=>settings.transform.wkt);\r\n\r\n  const transform = useCallback(()=>{\r\n    if (source !== undefined && target !== undefined) {\r\n      FetchConvertion(source, target, points.source, proj).then(res=>{\r\n        pointHandle({...points, target:res})\r\n      })\r\n    }\r\n  }, [source, target, points, proj]);\r\n\r\n  useEffect(()=>{\r\n    onConvert.current = transform\r\n  }, [onConvert, transform])\r\n\r\n  return (\r\n    <div className=\"point-converter__colomn\">\r\n      <Input point={points.source} onChange={pointHandle}/>\r\n      <Arrow />\r\n      <Output point={points.target}/>\r\n    </div>\r\n  )\r\n};","import { useState } from 'react';\nimport { useSelector } from 'react-redux';\n\nimport Popup from 'components/common/popup/popup';\nimport Interface from 'components/common/popup/interface/menu-bar/menu';\n\nimport \"./index.sass\";\n\n\nconst apiPostReq = async (data, files) => {\n    const url = `${process.env.REACT_APP_HOST}/api/repport/`;\n\n    const formData = new FormData();\n    \n    files.forEach((element, id) => {\n        formData.append(`img-${id}`, element);\n    });\n\n    Object.keys(data).forEach(key=> {\n        formData.append(key, data[key]);\n    });\n\n    const getCookie = name => {\n        let cookieValue = '';\n        if (document.cookie && document.cookie !== '') {\n            const cookies = document.cookie.split(';');\n            for (let i = 0; i < cookies.length; i++) {\n                const cookie = cookies[i].trim();\n                if (cookie.substring(0, name.length + 1) === (name + '=')) {\n                    cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\n                    break;\n                }\n            }\n        }\n        return cookieValue;\n    }\n\n   return await (\n    await fetch(url, {\n        method: 'POST',\n        headers: {\n            'X-CSRFToken': getCookie('csrftoken'),\n        },\n        body: formData\n\n    }).catch()).json();\n\n}\n\n\nfunction RepportPopup({ onClose }) {\n    const [message, setMessage] = useState('');\n    const [theme, setTheme] = useState('');\n    const [email, setEmail] = useState('');\n    const [selectedImage, setSelectedImage] = useState([]);\n\n    const state = useSelector(state => state.popups.isReporting);\n    \n    const HandeSend = (event) => {\n        setSelectedImage([]);\n        setMessage('')\n        event.preventDefault();\n        const data = {\n            subject: theme,\n            email: email,\n            message: message,\n        }\n        apiPostReq(data, selectedImage);\n        onClose();\n    };\n    \n    const addPic = event => {\n        if (selectedImage.length < 4) {\n            setSelectedImage([...selectedImage, event.target.files[0]]);\n        } else {\n            setSelectedImage([...selectedImage.filter((e,i) => i!==0), event.target.files[0]]);\n        }\n    };\n\n    const autoDestroy = id => {\n        setSelectedImage(selectedImage.filter( ( _, index) => index!==id ))\n    }\n\n    return (\n        <Popup isOpen={state} name='repport'>\n            <Interface onClose={onClose}/>\n            <div className=\"view--repport\">\n                <form className=\"view__inner--repport\" onSubmit={e => HandeSend(e)} enctype=\"multipart/form-data\">\n                    <div className=\"view__common-info\">\n                        <div className=\"view__mail\">\n                            <label id=\"mail\">Email:</label>\n                            <input type=\"email\" id=\"mail\" className='' onChange={e => setEmail(e.target.value)}/>\n                        </div>\n                        <div className=\"view__problem-name\">\n                            <label id=\"mail\">Problem:</label>\n                            <select name=\"problems\" id=\"pet-select\" onChange={e => setTheme(e.target.value)}>\n                                <option value=\"other\">--Please choose--</option>\n                                <option value=\"ui\">UI problem</option>\n                                <option value=\"trasformation\">Trasformation problem</option>\n                                <option value=\"settings\">Settings problem</option>\n                                <option value=\"other\">Other..</option>\n                            </select>\n                        </div>\n                    </div>\n                    <textarea className='view__problem-description'\n                            placeholder='Please describe your issue'\n                            value={message}\n                            onChange={e => setMessage(e.target.value)}>\n                    </textarea>\n                    <div className=\"screnshots-list\">\n                        {selectedImage.length > 0 && <div className=\"images__list\">\n                            {\n                                selectedImage.map( (element, id) => {\n                                    return ( <img className='screnshot' \n                                            onClick={() => autoDestroy(id)}\n                                            src={URL.createObjectURL(element)} />\n                                            )\n                                })\n                            }\n                            </div>\n                        }\n                        <input\n                                type=\"file\"\n                                id=\"screenTaker\"\n                                style={{display: \"none\"}}\n                                onChange={addPic}\n                                multiple\n                            />\n                        <label className='transformation__btn addscreen-btn' for=\"screenTaker\">Add Screnshot</label>\n                    </div>\n                    <div className=\"transform__menu\">\n                        <button className=\"transformation__btn send\">Send</button>\n                    </div>\n                </form>      \n            </div>\n        </Popup>\n    )\n}\n\nexport default RepportPopup;","import { useDispatch } from 'react-redux';\r\nimport ConverterPropretiesBtn from 'components/settings/button/global';\r\nimport { toggleRepport } from 'actions/popups'\r\n\r\nimport { useRef, useState } from 'react'\r\nimport { PointConverter } from './block'\r\nimport RepportPopup from './popup';\r\nimport './index.sass'\r\n\r\nexport default function Converter () {\r\n    const dispatch = useDispatch();\r\n    const onConvert = useRef<Function | null>(null);\r\n    const onClick = () => (onConvert.current!==null) ? onConvert.current():null\r\n    const [stateLocal, handleChange] = useState(false)\r\n    const startRepporting = () => {\r\n        handleChange(!stateLocal);\r\n        dispatch(toggleRepport(stateLocal));\r\n    }\r\n    return (\r\n        <>\r\n        <div className='point-converter'>\r\n            <h3 className=\"field-title\">\r\n                Point Converter\r\n            </h3>\r\n            \r\n            <div className=\"point-converter__settings\">\r\n                <ConverterPropretiesBtn/>\r\n            </div>\r\n\r\n            <div className=\"point-converter__inner\">\r\n                <div className=\"point-converter__items\">\r\n                   <PointConverter onConvert={onConvert}/>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"point-converter__buttons-list\">\r\n                <button className='base__button point-converter__button report-btn' onClick={startRepporting}> Report </button>\r\n                <button className='base__button point-converter__button convert-btn' onClick={onClick}> Convert </button>\r\n                <button className='base__button point-converter__button share-btn' > Share link </button>\r\n            </div>\r\n        </div>\r\n            <RepportPopup onClose={startRepporting}/>\r\n        </>\r\n\r\n    )\r\n}","import About from './components/about';\nimport Settings from './components/settings/settings';\nimport Converter from './components/converter';\n\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className='converter'>\n      <div className=\"application\">\n        <Settings/>\n        <Converter/>\n      </div>\n      <About/>\n    </div>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { Provider } from 'react-redux'\nimport store from './store'\n\nimport App from './App';\n\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App/>\n    </Provider>\n  </React.StrictMode>\n  ,\n  document.getElementById('root')\n);"],"sourceRoot":""}