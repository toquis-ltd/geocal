{"version":3,"sources":["components/globe/D3.js","components/popups/Interfaces.js","components/popups/Popups.js","components/popups/Navigation.js","components/globe/Globe.js","tools/parse.js","components/popups/changeCRS/Item.js","components/popups/changeCRS/Search.js","components/popups/changeCRS/Popular.js","components/popups/changeCRS/ChangeCRS.js","components/Settings.js","tools/format.js","components/fields/Input.js","components/fields/PointField.js","tools/calculate.js","components/converter/PointCoordinate.js","components/converter/ConversionButton.js","components/popups/ErrorMessages.js","components/converter/ConverterMessage.js","components/converter/PointConverter.js","components/fields/Output.js","components/Maps.js","components/Dropdown.js","components/Stories.js","App.js","AppWrapper.js","index.js"],"names":["name","states","provinces","Canada","America","bounds","node","document","createElement","projections","value","d3","svg","passive","append","style","projection","precision","graticule","pathGenerator","g","drawStates","data","selectAll","features","enter","attr","on","event","d","console","log","properties","drawCanada","canada","drawBox","undefined","arc","extentMajor","westBoundLon","southBoundLat","eastBoundLon","northBoundLat","remove","outline","type","datum","call","rotate","k","scale","dx","dy","Promise","all","process","then","countries","WorldJson","UsJson","ProvincesJson","CanJson","AmericaJson","world","feature","objects","custom","canada_provinces","scaleExtent","transform","getCountry","setBounds","Classic","onClose","onSubmit","submitText","className","onClick","Popup","props","isOpen","ReactDOM","createPortal","children","interface","getElementById","Navigation","tabs","useState","tab","setTab","map","item","index","a","b","Globe","count","setCount","click","useEffect","setTimeout","getInformationAboutCode","code","fetch","catch","json","convert","s_crs","t_crs","x","y","z","url","parameters","quest","Item","element","i","tabIndex","area","CRSSelector","findCRS","Search","onSave","setQuest","setFindCRS","search","q","getCRSList","e","onChange","target","country","onGlobeClick","Popular","listOfpopular","setList","getPopular","ChangeCRS","crs","setCRS","OnApply","isSaving","selectFindCRS","message","CoordinateSystemSelector","title","isChanging","toggleChanging","set","changeCRS","get","href","JSON","stringify","unityOfMeasure","detail","ConversionSettings","sourceCRS","targetCRS","sourceData","sourceBounds","targetData","targetBounds","alert","CheckBounds","convertToDecimal","length","test","replace","dms_list","toLowerCase","split","sign","Math","abs","m","parseFloat","s","Number","toFixed","toString","InputField","placeholder","autoComplete","handleFormat","point","state","stateList","indexOf","Object","keys","forEach","parseInt","convertToDMS","PointField","id","format","setFormatIndex","placeholders","includes","PointCoordinate","source","evt","handler","prevState","charAt","ConversionButton","isConverted","toggleConverted","ErrorMessage","NotSelectError","PointCoordinateError","ShowErrorMessage","error","isShow","empty","clear","decimalPoint","submit","systems","handle","points","push","addNewStory","history","isConvertable","sourcePoint","handlers","convertPoint","PointConverter","updateHistory","setSourcePoint","targetPoint","setTargetPoint","setError","preventDefault","method","OutputCoordinateField","MapPointCase","position","MapContainer","center","zoom","zoomControl","TileLayer","Marker","Dropdown","link","open","setOpen","toggle","handleClickOutside","role","onKeyPress","navigator","clipboard","writeText","clickOutsideConfig","onClickOutside","StoryCase","isActivate","toggleActivate","pointOnMap","setPoint","copyLink","lat","lng","Output","Stories","parse","handelCRS","handeler","Converter","sourceCRSCode","targetCRSCode","setSourceCRS","setTargetCRS","setHistory","story","targetHistory","unshift","App","params","URLSearchParams","location","substring","UrlParser","render"],"mappings":"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","file":"static/js/main.e502cddd.chunk.js","sourcesContent":["import {feature} from 'topojson';\nimport * as d3 from \"d3\";\n\nconst node = document.createElement('div');\nvar name;\nvar states, provinces, Canada, America\n\n\nvar projections = [\n  {name: \"mercator\", value: d3.geoMercator()},\n  {name: \"orthograpic\", value: d3.geoOrthographic()},\n  {name: \"Us\", value: d3.geoAlbersUsa()} \n];\n\n//var bounds = {westBoundLon: 1, northBoundLat: 1, eastBoundLon: 1, southBoundLat: 1 };\nlet bounds;\nvar width = 960,\n    height = 600;\nvar svg = d3.select(node,  {passive: true}).append(\"svg\")\n    .style(\"width\", \"100%\")\n    .style(\"height\", height)\nlet projection = projections[1].value.precision(0.1);\n\nconst graticule = d3.geoGraticule();\nlet pathGenerator = d3.geoPath(projection);\n\n\nconst g = svg.append('g')\n.style(\"width\", \"100%\")\n.style(\"height\", \"100%\");\n\n\ng.append('path')\n    .attr('class', 'sphere')\n    .attr('d', pathGenerator({type: 'Sphere'}))\n    .on(\"click\", function(event,d) {\n      name = \"World\"\n    });\n\ng.append('path')\n    .datum(graticule)\n    .attr(\"class\", \"graticule\")\n    .attr(\"d\", pathGenerator);\n\ng.call(d3.drag()\n.on(\"drag\", (event, d) => {\n  g.selectAll('.states').remove();\n  g.selectAll('.provinces').remove();\n  g.selectAll('.rect').remove();\n  drawStates(America)\n  drawCanada(Canada)\n    const rotate = projection.rotate()\n    const k = 50 / projection.scale()\n    projection.rotate([\n      rotate[0] + event.dx * k,\n      rotate[1] - event.dy * k\n    ])\n    pathGenerator = d3.geoPath().projection(projection)\n  \tg.selectAll(\".graticule\").attr(\"d\", pathGenerator)\n  \tg.selectAll(\"path\").attr(\"d\", pathGenerator)\n    g.selectAll('.sphere').attr(\"d\", pathGenerator({type: 'Sphere'}))\n    //g.selectAll('.rect').attr('d', pathGenerator(arc.outline()))\n})\n.on(\"end\", (event, d) => {\n  g.selectAll('.states').remove();\n  g.selectAll('.provinces').remove();\n  drawStates(states);\n  drawCanada(provinces);\n  drawBox(bounds);\n}), {passive: true});\n\n\nfunction drawWorld(countries){\n  if (countries.features !== undefined) \n  g.selectAll('.country').data(countries.features)\n  .enter().append('path')\n    .attr('class', 'country')\n    .attr('d', pathGenerator)\n    .on(\"click\", function(event,d) {\n      console.log(d.properties.name)\n      name = d.properties.name\n    })\n}\nfunction drawStates(data){\n  g.selectAll('.states').data(data.features)\n  .enter().append('path')\n  .attr('class', 'states')\n  .attr('d', pathGenerator)\n  .on(\"click\", function(event, d) {\n    console.log(d.properties.name)\n    name = d.properties.name\n  })\n}\nfunction drawCanada(canada){\n  g.selectAll('.provinces').data(canada.features)\n  .enter().append('path')\n  .attr('class', 'provinces')\n  .attr('d', pathGenerator)\n  .on(\"click\", function(event, d) {\n    console.log(d.properties.name)\n    name = d.properties.name\n  })\n}\nfunction drawBox(data) {\n  if (data === undefined) return null\n  else {\n    bounds = data;\n  }\n  let arc = d3.geoGraticule().extentMajor([[bounds.westBoundLon, bounds.southBoundLat], [bounds.eastBoundLon, bounds.northBoundLat]]);\n  g.selectAll('.rect').remove();\n  g.append('path')\n  .attr('class', 'rect')\n  .attr('d', pathGenerator(arc.outline()))\n  .style(\"pointer-events\", \"none\")\n}\n\nPromise.all([\n  d3.json(`${process.env.REACT_APP_HOST}/api/globe/?format=json&region=world`),\n  d3.json(`${process.env.REACT_APP_HOST}/api/globe/?format=json&region=usa`),\n  d3.json(`${process.env.REACT_APP_HOST}/api/globe/?format=json&region=canada`),\n  d3.json(`${process.env.REACT_APP_HOST}/api/globe/?format=json&region=canada-lowres`),\n  d3.json(`${process.env.REACT_APP_HOST}/api/globe/?format=json&region=usa-lowres`),\n]).then(([WorldJson, UsJson, ProvincesJson, CanJson, AmericaJson]) => {\nconst world = feature(WorldJson, WorldJson.objects.custom);\nstates = feature(UsJson, UsJson.objects.states);\nprovinces = feature(ProvincesJson, ProvincesJson.objects.canada_provinces);\nCanada = feature(CanJson, CanJson.objects.custom);\nAmerica = feature(AmericaJson, AmericaJson.objects.custom);\n\n  drawWorld(world)\n  drawCanada(provinces)\n  drawStates(states)\n\n})\n\ng.call(d3.zoom()\n.scaleExtent([0.9,10])   \n.on('zoom', (event) => {\n  g.attr('transform', event.transform, )\n}, ()=>null, {passive: true}), {passive: true});\n\nexport const getNode = () => node;\nexport const getCountry = () => {\n  return name\n};\nexport const setBounds = (data) =>{\n  drawBox(data)\n}\n\n","export function Classic(onClose, onSubmit, submitText) {\n    return (\n            <div className='popup__interface'>\n                <button className='popup__close-btn' onClick={() => onClose()} type='button'>&#215;</button>\n                <button className='apply__button popup__save-btn' onClick={() => onSubmit()} type='submit'>{submitText}</button>\n            </div>\n    );\n}\n\nexport function OnlyCloseButton(onClose) {\n    return (\n            <div className='popup__interface'>\n                <button className='popup__close-btn' onClick={() => onClose()} type='button'>&#215;</button>\n            </div>\n    );\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nfunction Popup (props) {\n  if (!props.isOpen) return null;\n  return ReactDOM.createPortal (\n    <div className='popup'>\n      <div className={`popup__inner ${props.className}`}>\n        <div className='popup__container'>\n          {props.children}\n        </div>\n        {props.interface()}\n      </div>\n    </div>,\n    document.getElementById('popup')\n    );\n}\n\nexport default Popup;","import { useState } from 'react';\n\nconst tabState = (a, b) => (a === b) ? 'tabs__item--activate' : 'tabs__item--deactivate';\n\nexport function Navigation({tabs, children }) {\n  const [tab, setTab] = useState(0);\n  return (\n    <>\n      <nav className='tabs'>\n        {tabs.map((item, index) => {\n          return <button className={`tabs__item ${tabState(tab, index)}`} onClick={() => setTab(index)}>{item}</button>;\n        })}\n      </nav>\n      {children[tab]}\n    </>\n  );\n} ","import React, { useState, useEffect } from \"react\";\nimport {Component as RD3Component}  from 'react-d3-library';\nimport {getNode, getCountry, setBounds} from './D3'\n\nfunction Globe ({onClick}) {\n  const [count, setCount] = useState(0);\n  const node = getNode();\n  const click = () => {\n    onClick(getCountry);\n    setCount(0);\n  }\n  useEffect(() => {\n    setTimeout(() => setCount(count+1), 1);\n  })\n  return (\n          <div className='globe' onClick={() => click()}>\n            <RD3Component data={node} />\n          </div>\n     )\n};\nexport default Globe;","export async function getInformationAboutCode(code){\n    return await (await fetch(`${process.env.REACT_APP_HOST}/api/epsg/?code=${code}&format=json`).catch()).json();\n}\n\nexport async function convert(s_crs, t_crs, x, y, z){\n    const url = `${process.env.REACT_APP_HOST}/api/transform/?format=json`;\n    const parameters = `&s_crs=${s_crs}&t_crs=${t_crs}&source_x=${x}&source_y=${y}&source_z=${z}`;\n    return await (await fetch(url+parameters).catch()).json();\n}\n\nexport async function getCRSList(quest){\n    return await (await fetch(`${process.env.REACT_APP_HOST}/api/search/?format=json&q=${quest}`).catch()).json();\n}\n\nexport async function getPopular(){\n    return await (await fetch(`${process.env.REACT_APP_HOST}/api/popular/?format=json`).catch()).json();\n}","import React from 'react';\n\nexport const Item = (element, i, onClick) => {\n  \n  return (\n    <div className='result__item' onClick={() => {onClick(element)}}  tabIndex=\"1\" key={i}>\n      <h3 className='result__item-title'>{element.name}</h3>\n      <h4 className='result__item-description result__item-description--area'>Area: {element.area}</h4>\n      <h4 className='result__item-description result__item-description--code'>Code: {element.code}</h4>\n    </div>\n  );\n  }","import { useState } from 'react';\nimport Globe from '../../globe/Globe';\nimport { getCRSList } from '../../../tools/parse';\nimport { Item } from './Item';\n\nconst CRSSelector = ({findCRS, onClick}) => {\n    return (\n      <div className='result'>\n        <div className='result__container'>\n          <div className='result__list'>\n            {findCRS.map((element, i)=>Item(element, i, onClick))}\n          </div>\n        </div>\n        <div className='result__footer'>\n            <p>\n              There are no more CRS\n            </p>\n        </div>\n      </div>\n    );\n}\n\nexport function Search({ onSave }) {\n  const [quest, setQuest] = useState('');\n  const [findCRS, setFindCRS] = useState([]);\n  const search = (q) => getCRSList(q).then((e) => setFindCRS(e.findCRS));\n  const onGlobeClick = getCountry => {\n    const country = getCountry();\n    setQuest(country);\n    search(country);\n  };\n\n  return (\n    <>\n      <div className='search'>\n        <div className='search__header'>\n          <input className='search__bar' onChange={(event) => setQuest(event.target.value)} value={quest} />\n          <button className='search__btn' onClick={() => search(quest)}>search</button>\n        </div>\n        <div className='search__container'>\n          <CRSSelector findCRS={findCRS} onClick={(e) => onSave(e)} />\n        </div>\n      </div>\n      <div className='complimentary_tool_container'>\n        <Globe onClick={(e) => onGlobeClick(e)} />\n      </div>\n    </>\n  );\n}\n","import { useState, useEffect} from \"react\";\nimport { getPopular } from \"../../../tools/parse\";\nimport { Item }  from './Item'\n\n\nfunction Popular ({onSave}) {\n    const [listOfpopular, setList] = useState([]);\n\n    useEffect(() => { \n        getPopular().then(e=>{setList(e[0])});\n    }, []);\n    \n    return (\n        <div className='popular'>\n            <div className='popular__grid'>\n                {listOfpopular.map((element, i) => Item(element, i, onSave))}\n            </div>\n        </div>\n    )\n}\n\nexport default Popular;","import { useState } from \"react\";\nimport { Classic } from '../Interfaces'\nimport Popup  from '../Popups';\n\nimport { Navigation } from '../Navigation';\nimport { Search } from './Search';\nimport { getInformationAboutCode } from '../../../tools/parse';\nimport { setBounds } from '../../globe/D3';\n\nimport Popular  from './Popular';\n\nexport function ChangeCRS({ isOpen, onClose, onSave }) {\n  const [crs, setCRS] = useState()\n  const OnApply = () => onSave(crs);\n  const tabs = ['Search', 'Popular'];\n  let isSaving = false;\n  const selectFindCRS = async (e) => {\n    if (!isSaving) {\n      isSaving = true;\n      getInformationAboutCode(e.code)\n      .then(e => {\n        setCRS(e.message)\n        setBounds(e.message.bounds)\n      });\n    }\n  };\n  return (\n    <Popup isOpen={isOpen} className='crs-selector' interface={()=>Classic(onClose, OnApply, 'apply')}>\n      <Navigation tabs={tabs}>\n        <Search onSave={(e) => selectFindCRS(e)}/>\n        <Popular onSave={e => selectFindCRS(e)} />\n      </Navigation>\n    </Popup>\n  );\n}","import React, {useState} from 'react';\nimport { setBounds } from './globe/D3';\nimport {ChangeCRS} from './popups/changeCRS/ChangeCRS';\n\nfunction  CoordinateSystemSelector ({title, crs}) {\n    const [isChanging, toggleChanging] = useState(false);\n    const changeCRS = (e) => {\n      crs.set(e);\n      toggleChanging(false);\n    }\n    const detail = () => {\n      const data = crs.get();\n      if (JSON.stringify(data) === JSON.stringify({})) return null\n      const bounds = {...data.bounds};\n      return (\n        <div className='selector__detail'>\n          <p>ESPG: {data.code}</p>\n          <p>Unit: {data.unityOfMeasure}</p>\n          <div className='selector__bounds'>\n              <h4>Area bounds in WGS 84:</h4>\n                  <p>South latitude: {bounds.southBoundLat}</p>\n                  <p>North latitude: {bounds.northBoundLat}</p>\n                  <p>West longitude: {bounds.westBoundLon}</p>\n                  <p>East longitude: {bounds.eastBoundLon}</p>\n            </div>\n        </div>  \n      );\n    }\n    return (\n      <div className='selector'>\n       <ChangeCRS isOpen={isChanging} onClose={() => toggleChanging(false)} onSave={(e)=>changeCRS(e)}/>\n        <div className='selector__header'>\n          <h3 className=\"field-title\">{title}</h3>\n        </div>\n        <div className='selector__container'>\n          <button\n            className=\"selector__btn\"\n            onClick={() => toggleChanging(true)}>\n            {(crs.get().name) ? crs.get().name:'Click to select CRS'}\n          </button>\n        </div>\n        <div className='selector__footer'>\n          <a href={(crs.get().code) && `${process.env.REACT_APP_HOST}/about/crs/${crs.get().code}`}>More information</a>\n          {detail()}\n        </div>\n    </div>\n  );\n}\n\nfunction CheckBounds(sourceCRS, targetCRS){\n      const sourceData = sourceCRS.get();\n      if (JSON.stringify(sourceData) === JSON.stringify({})) return null\n      const sourceBounds = {...sourceData.bounds};\n      setBounds(sourceBounds)\n      const targetData = targetCRS.get();\n      if (JSON.stringify(targetData) === JSON.stringify({})) return null\n      const targetBounds = {...targetData.bounds};\n      \n\n      //if east > west && north > south   --- they intersect\n      if (sourceBounds.eastBoundLon > targetBounds.westBoundLon && sourceBounds.northBoundLat > targetBounds.southBoundLat){\n        console.log(true)\n        \n      }\n      else{\n        console.log(false)\n        alert(\"Selected systems do not intersect. This may cause problem / be ineffective\")\n      }\n}\n\nfunction ConversionSettings ({sourceCRS, targetCRS}) {\n  console.log(sourceCRS)\n  CheckBounds(sourceCRS, targetCRS)\n  return (\n    <div className=\"converter__settings\">\n\n      <CoordinateSystemSelector\n        title='Source coordinate system'\n        crs={sourceCRS}\n      />\n      \n      <CoordinateSystemSelector\n        title='Target coordinate system'\n        crs={targetCRS}\n      />\n\n    </div>\n  );\n}\n\n\nexport default ConversionSettings;","export function convertToDMS (value, m = 0, s = 0)  {\n    value = value.toString();\n    if (value.length === 0) return \"0°0'0\"  \n    if (/'|\"/.test(value) === true) return value\n    \n    let d = value.split(\".\")[0];\n    if (value.split(\".\").length>1)\n    {\n      m = parseInt((\".\"+(value.split(\".\")[1]))*60);\n      s = Number((\".\"+(value.split(\".\")[1])-m/60)*3600).toFixed(4).replace(/(\\.0+|0+)$/, '');\n    }\n    return `${d}°${m}'${s}`\n};\n\nexport function convertToDecimal (value)  {\n    \n    // exception case  \n    if (value.length === 0) return '0'; // if value is empty\n    if (/'|\"/.test(value) === false) return value; // if value doesn't contain any separator\n    \n    //prepare value\n    value.replace('\"', ''); // \n    value = value.toLowerCase(); //\n\n    //if 'w' or 'e' char in value\n    //when remove it and transform to oposit digit\n    const chartRe = /w|e/g;\n    let  dms_list = value.split(/°|'|\"/);\n    let sign = Math.sign(Math.sign(dms_list[0])*2+1);\n\n    if (chartRe.test(value)){\n      value = value.replace(/w|e/g, '');\n      dms_list = value.split(/°|'|\"/);\n      sign*=-1;\n    }\n\n    //convert \n    const d = Math.abs(dms_list[0]);\n    const m = parseFloat(dms_list[1]/60);\n    const s = parseFloat(dms_list[2]/3600);\n    return Number((d+m+s)*sign).toFixed(8).replace(/(\\.0+|0+)$/, '').toString();\n};","import React from 'react';\n\nexport function  InputField ({placeholder, value, onChange, name}) {\n    return (\n      <input\n        autoComplete=\"off\"\n        placeholder={placeholder}\n        type='text'\n        value={value}\n        name={name}\n        className={`input-fields__item-field`}\n        onChange={(event) => onChange(event)} />\n    );\n}\n\n","import React, { useState } from 'react';\nimport { getPlaceholders } from '../../tools/calculate';\nimport { convertToDMS, convertToDecimal } from '../../tools/format';\nimport { InputField } from './Input';\n\nconst handleFormat = (point, state) => {\n\n  const stateList = [\"degrees\", \"d°m's\"];\n  const index = stateList.indexOf(state.get());\n\n  Object.keys(point).forEach(element => {\n    switch (index) {\n      case 0:\n        point[element] = convertToDecimal(point[element]);\n        break;\n\n      case 1:\n        point[element] = convertToDMS(point[element]);\n        break;\n\n      default:\n        break\n    }\n  });\n\n  if (index < (stateList.length - 1)) return state.set(stateList[index + 1]);\n  state.set(stateList[0]);\n};\n\nfunction PointField({ point, title, id, placeholder, onChange }) {\n  const [format, setFormatIndex] = useState(\"d°m's\");\n  const placeholders = getPlaceholders(placeholder);\n  return (\n    <div className=\"input-fields\">\n      <div className=\"input-fields__header\">\n        <h3 className=\"field-title\">{title}</h3>\n      </div>\n      <div className=\"input-fields__container\">\n        <InputField\n          value={point.x}\n          name={`${id}_x`}\n          placeholder={placeholders[0]}\n          onChange={(event) => onChange(event)} />\n\n        <InputField\n          value={point.y}\n          name={`${id}_y`}\n          placeholder={placeholders[1]}\n          onChange={(event) => onChange(event)} />\n\n        <InputField\n          value={point.z}\n          name={`${id}_z`}\n          placeholder={placeholders[2]}\n          onChange={(event) => onChange(event)} />\n      </div>\n      <div className='input-fields__footer'>\n        {(placeholder === 'degree') ?\n          <button \n            className='apply__button input-fields__format-btn'\n            type='button'\n            onClick={() => handleFormat(point, {get:() => format, set:setFormatIndex})}>\n            Format: {format}\n          </button> : null}\n      </div>\n    </div>\n  );\n}\n\nexport default PointField;","\nexport function getPlaceholders(unityName) {\n    const deglist = ['degree', 'unknown', 'sexagesimal', ' DMS.s'];\n    if (deglist.includes(unityName)) return ['Latitude', 'Longitude', 'Altitude'];\n    return ['X', 'Y', 'Z'];\n}\n\nexport function getInterpalatingAreaAxe(area, area1) {\n    const getSmallest = data => {\n        let smallest = data[0];\n        data.forEach(element => {\n            if (Math.abs(element) < Math.abs(smallest)) smallest = element\n        });\n        return smallest\n    };\n\n    const southBoundLats = [area.southBoundLat, area1.southBoundLat];\n    const northBoundLats = [area.northBoundLat, area1.northBoundLat];\n    const westBoundLons =  [area.westBoundLon, area1.westBoundLon];\n    const eastBoundLons =  [area.eastBoundLon, area1.eastBoundLon];\n\n    const southBoundLat = getSmallest(southBoundLats);\n    const northBoundLat = getSmallest(northBoundLats);\n    const westBoundLon = getSmallest(westBoundLons);\n    const eastBoundLon = getSmallest(eastBoundLons);\n    \n\n    return {\n            southBoundLat:southBoundLat,\n            northBoundLat:northBoundLat,\n            westBoundLon:westBoundLon,\n            eastBoundLon:eastBoundLon,\n            }\n}\n\nexport function getAreaCenter(area){\n    const y = (area.southBoundLats + area.northBoundLats)/2;\n    const x = (area.westBoundLon + area.eastBoundLon)/2;\n    return (x, y)\n}","import PointField from \"../fields/PointField\";\n\nexport function PointCoordinate({ source, target }) {\n  const handleSourceChange = (evt) => {\n    source.handler(prevState => ({\n      ...prevState,\n      [evt.target.name.charAt(7)]: evt.target.value,\n    }));\n  };\n  return (\n    <div className=\"coordinate__fields\">\n      <PointField\n        className=\"source__coordinate\"\n        title=\"Source coordinates\"\n        id=\"source\"\n        placeholder={source.unityOfMeasure}\n        point={source.point}\n        onChange={(event) => handleSourceChange(event)} />\n\n      <PointField\n        className=\"target__coordinate\"\n        title=\"Target coordinates\"\n        id=\"target\"\n        placeholder={target.unityOfMeasure}\n        point={target.point}\n        onChange={() => false} />\n    </div>\n  );\n}\n","import {useState} from 'react';\n\nexport function ConversionButton() {\n  const [isConverted, toggleConverted] = useState(false);\n  return (\n    <div className=\"buttons__container\">\n      <button\n        className=\"apply__button convert-btn\"\n        type='submit'\n        onClick={() => toggleConverted(!isConverted)}\n      >\n        {isConverted ? \"Next\" : \"Convert\"}\n      </button>\n    </div>\n  );\n}","import Popup  from './Popups';\nimport {Classic} from './Interfaces';\n\nexport function ErrorMessage({isOpen, onClose, title, children}) {\n  return (\n    <Popup className='error-message' isOpen={isOpen} interface={()=>Classic(onClose, onClose, 'Ok')} >\n      <div className='error'>\n        <div className='error__header'>\n          <h2>{title}!!!</h2>\n        </div>\n        <div className='error__container'>\n            {children}\n        </div>\n      </div>\n    </Popup>\n  );\n}\n\nexport function TransformationError({isOpen, onClose}) {\n  return (\n    <ErrorMessage isOpen={isOpen} onClose={onClose} title='Error'>\n            <p>\n                text du message d'erreur <br/>\n                text of error message\n            </p>\n    </ErrorMessage>\n  );\n}\n\nexport function IncompatibilityCRSError({isOpen, onClose}) {\n  return (\n    <ErrorMessage isOpen={isOpen} onClose={onClose} title='Incompatibility error'>\n            <p>\n                Your are trying to converte coordinate referance system point to other coordinate system but they don't interpolate between. <br/>\n                Plaese verify and retry again\n            </p>\n    </ErrorMessage>\n  );\n}\n\nexport function NotSelectError({isOpen, onClose}) {\n  return (\n    <ErrorMessage isOpen={isOpen} onClose={onClose} title=\"Please select source and target CRS\">\n            <p>\n                Blabla Blabla\n            </p>\n    </ErrorMessage>\n  );\n}\n\nexport function PointCoordinateError({isOpen, onClose}) {\n  return (\n    <ErrorMessage isOpen={isOpen} onClose={onClose} title='Point not determinate'>\n            <p>\n              Please enter point coordinates\n            </p>\n    </ErrorMessage>\n  );\n}","import {NotSelectError, PointCoordinateError} from '../popups/ErrorMessages'\n\nexport function ShowErrorMessage({error, onClose}) {\n    switch (error.code) {\n        case 0:\n            return <NotSelectError isOpen={error.isShow} onClose={onClose}/>\n        case 1:\n            return <PointCoordinateError isOpen={error.isShow} onClose={onClose}/>\n        case 2:\n            break;\n\n        default:\n            return null;\n    }\n}","import React, {useState} from 'react';\n\nimport {convert} from '../../tools/parse'\nimport {convertToDecimal} from '../../tools/format'\n\nimport {PointCoordinate} from './PointCoordinate';\nimport {ConversionButton} from './ConversionButton';\n\nimport {ShowErrorMessage} from './ConverterMessage'\n\nconst empty = {x: '', y: '', z: '' };\nconst clear = (handler) => handler({...empty});\nconst decimalPoint = point => ({\n  x:convertToDecimal(point.x),\n  y:convertToDecimal(point.y),\n  z:convertToDecimal(point.z)\n});\n\nconst isConvertable = (systems, point, handler) => {\n  \n  //Does target and source CRS are selected\n  if (!systems.source.code || !systems.target.code) {\n    handler({isShow:true, code:0});\n    return false\n  }\n  //Source x and y coordinate are empty\n  if (point.x.length === 0 || point.y.length === 0) {\n    handler({isShow:true, code:1});\n    return false\n  }\n\n  return true\n}\n\nconst convertPoint = (systems, sourcePoint, handlers) => {\n  const point = decimalPoint(sourcePoint);\n  convert(systems.source.code, systems.target.code,\n          point.x, point.y, point.z).then(event => handlers.target({...event}));\n};\n\nconst addNewStory = (systems, points, push) => {               \n  const story = {\n    source: {\n              crs:systems.source,\n              point:decimalPoint(points.source)\n            },\n    target: { \n              crs:systems.target,\n              point: points.target, \n            }\n  };\n  push(story);\n};\n\nconst submit = (systems, point, handle) => {\n  if (point.target.x !== '') {\n    addNewStory(systems, point, handle.history);\n    clear(handle.source);\n    clear(handle.target);\n    return;\n  }\n  if (isConvertable(systems, point.source, handle.error)) {\n    convertPoint(systems, point.source, handle);\n  }\n}\n\nfunction PointConverter ({sourceCRS, targetCRS, updateHistory, point}) {\n  const [sourcePoint, setSourcePoint] = useState({...point});\n  const [targetPoint, setTargetPoint] = useState({...empty});\n  const [error, setError] = useState({isShow:false, code:undefined});\n  \n  const handleSubmit = event => {\n    event.preventDefault();\n    const systems = {source:sourceCRS, target:targetCRS};\n    const points = {source:sourcePoint, target:targetPoint};\n    const handlers = {source:setSourcePoint, target:setTargetPoint, error:setError, history:updateHistory};\n    submit(systems, points, handlers);\n  };\n\n  return (\n    <div className=\"converter__coordinate\">\n      <form onSubmit={(e) => handleSubmit(e)} method='GET'>\n        <PointCoordinate\n          source={{point:sourcePoint, unityOfMeasure:sourceCRS.unityOfMeasure, handler:(e)=>setSourcePoint(e)}}\n          target={{point:targetPoint, unityOfMeasure:targetCRS.unityOfMeasure}}\n        />\n        <ConversionButton/>\n      </form>\n      <ShowErrorMessage error={error} onClose={()=>setError(false)}/>\n    </div>\n  )\n}\n\nexport default PointConverter;","import React from 'react';\n\nfunction OutputCoordinateField({ className, point }) {\n  return (\n    <div className={`accordion__output-container ${className}-output`}>\n      <p className={`accordion__output-field`}>{point.x}</p>\n      <p className={`accordion__output-field`}>{point.y}</p>\n      <p className={`accordion__output-field`}>{point.z}</p>\n    </div>\n  );\n}\nexport default OutputCoordinateField;","import React from \"react\"\nimport {MapContainer, TileLayer, Marker, Popup} from 'react-leaflet';\n\nexport function MapPointCase ({position}){\n  return (\n    <div className=\"map__container accordion__map\" >\n        <MapContainer center={position} zoom={2} zoomControl={false}>\n          <TileLayer url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"/>\n          <Marker position = {position}>\n            <Popup>Test</Popup>\n          </Marker>\n        </MapContainer>\n    </div>\n  )\n}","import React, { useState } from 'react';\nimport onClickOutside from \"react-onclickoutside\";\n\nfunction Dropdown({title, link}){\n    const [open, setOpen] = useState(false);\n    const toggle = () => setOpen(!open);\n    Dropdown.handleClickOutside = () => setOpen(false);\n    function handleOnClick(item) {}\n\n    return(\n        <div className = \"dd-wrapper\">\n             <div\n        tabIndex={0}\n        className=\"dd-header\"\n        role=\"button\"\n        onKeyPress={() => toggle(!open)}\n        onClick={() => toggle(!open)}\n      >\n        <div className=\"dd-header__title\">\n          <p className=\"dd-header__title--bold\">{title}</p>\n        </div>\n      </div>\n      {open && (\n        <ul className=\"dd-list\">\n            <li className=\"dd-list-item\">\n                <button onClick={() => {navigator.clipboard.writeText(link)\n                alert(\"Link Coppied!\")}}>Copy Link</button>\n            </li>\n        </ul>\n      )}\n        </div>\n    )\n}\nconst clickOutsideConfig = {\n    handleClickOutside: () => Dropdown.handleClickOutside,\n  };\n\nexport default onClickOutside(Dropdown, clickOutsideConfig);","import React, {useState, useEffect} from 'react';\nimport OutputCoordinateField  from './fields/Output';\nimport { MapPointCase } from './Maps';\nimport {convert} from '../tools/parse'\nimport Dropdown from './Dropdown'\n\nfunction StoryCase({source, target, element}){\n  const [isActivate, toggleActivate] = useState(false);\n  const [pointOnMap, setPoint] = useState();\n  var copyLink = (`${process.env.REACT_APP_HOST}/converter/?s_crs=${source.crs.code}&t_crs=${target.crs.code}`);\n\n  useEffect(() => {\n    convert(source.crs.code,\n      4326,\n      source.point.x,\n      source.point.y, \n      source.point.z).then((e) => setPoint({lat:e.x, lng:e.y}));\n  }, [])\n\n  return (\n    <div className={`accordion accordion--${(isActivate) ? 'activate' : 'deactivate'}`}>\n\n      <div className='accordion__header'>\n        <button className=\"accordion__btn accordion__open-btn\" onClick={() => toggleActivate(!isActivate)}>{source.crs.name} → {target.crs.name}</button>\n      \n        <Dropdown title = \"Share\" link = {copyLink}/>\n        <button className=\"accordion__btn accordion__remove-btn\" onClick = {() => console.log(element)}>🗑️</button>\n      </div>\n\n      <div className={`accordion__container  accordion__container--${(isActivate) ? 'activate' : 'deactivate'}`}>\n\n        <div className=\"accordion__row\">\n\n          <OutputCoordinateField\n                                className=\"source__coordinate\"\n                                point={source.point}\n          />\n\n          { (pointOnMap !== undefined) && <MapPointCase position={pointOnMap}/> }\n\n          <OutputCoordinateField\n                                className=\"target__coordinate\"\n                                point={target.point}\n          />\n        </div>\n      </div>\n    </div>\n  ); \n}\n\nfunction Stories({history}){\n  return (\n    <div className=\"converter__history\">\n      <div className='history__header'> \n        <h2 className=\"history__title\">History of conversion</h2>\n      </div>\n      <div className='history__container'>\n        {history.map((element, i) => {\n          element = JSON.parse(element);\n          return (\n                  <StoryCase\n                                  id={i}\n                                  key={history.length-i}\n                                  source={element.source}\n                                  target={element.target}\n\n                  />\n                )\n        })}\n      </div>\n    </div>\n  );\n}\n\nexport default Stories","import {useState, useEffect} from 'react';\n\nimport ConversionSettings  from \"./components/Settings\";\nimport PointConverter from \"./components/converter/PointConverter\";\nimport Stories from './components/Stories';\n\nimport { getInformationAboutCode } from './tools/parse'\nimport { UrlParser } from './AppWrapper'\n\nimport './styles/style.sass';\nimport './styles/converter-style.sass';\nimport './styles/history-style.sass';\nimport './styles/popup-style.sass';\nimport './styles/globe-style.sass';\nimport './styles/settings-style.sass';\nimport './styles/dropdown-style.sass';\n\nasync function handelCRS (code, handeler) {\n    await getInformationAboutCode(code).then(e => handeler(e.message));\n}\n\nfunction Converter ({sourceCRSCode, targetCRSCode, point}) {\n    \n    const [sourceCRS, setSourceCRS] = useState({});\n    const [targetCRS, setTargetCRS] = useState({});\n    const [history, setHistory] = useState([]);\n    \n    useEffect(() => {\n        if (sourceCRSCode !== null) handelCRS(sourceCRSCode, setSourceCRS);\n        if (targetCRSCode !== null) handelCRS(targetCRSCode, setTargetCRS);\n    }, [])\n\n    function updateHistory(story) {\n        let targetHistory = [...history];\n        if (history.includes(JSON.stringify(story)) === false) {\n            targetHistory.unshift(JSON.stringify(story));\n            setHistory(targetHistory);\n        }\n    }\n\n    return(\n      <>\n        <ConversionSettings\n                            sourceCRS={{get:()=>sourceCRS, set:setSourceCRS}}\n                            targetCRS={{get:()=>targetCRS, set:setTargetCRS}}\n        />\n        <PointConverter\n                        sourceCRS={sourceCRS}\n                        targetCRS={targetCRS}\n                        updateHistory = {(e) => updateHistory(e)}\n                        point={point}\n        />\n        <Stories history={history}/>\n      </>\n    );\n}\n\n\nfunction App() {\n    const [source, target, point] = UrlParser();\n    return <Converter sourceCRSCode={source} targetCRSCode={target} point={point}/>\n}\n\nexport default App;","export function UrlParser() {\n    const params = new URLSearchParams(document.location.search.substring(1));\n    const source = params.get(\"s_crs\");\n    const target = params.get(\"t_crs\");\n\n    const point = {x:'', y:'', z:''};\n    point.x = params.get(\"x\") || '';\n    point.y = params.get(\"y\") || '';\n    point.z = params.get(\"z\") || '';\n\n    return [source, target, point]\n}","import ReactDOM from 'react-dom';\nimport App from \"./App\";\n\nReactDOM.render(<App/>, document.getElementById('root'));"],"sourceRoot":""}